#line 1 "/Users/Flavio/Desktop/Project/Linux/platform-redhat.h" 1
//Generated with:
//echo -|gcc -dM - -E -std=gnu99 







































































































































#line 1 "/Users/Flavio/Desktop/Workspaces/FSE15/SamplingConstraints/bugs/linux/arch/arm/mach-omap2/board-omap3pandora.c" 1
/*
 * board-omap3pandora.c (Pandora Handheld Console)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 *
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/init.h" 1
#if !definedEx(_LINUX_INIT_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1
#if !definedEx(__LINUX_COMPILER_H)


#if !definedEx(__ASSEMBLY__)
#if definedEx(__CHECKER__)












extern void __chk_user_ptr(const volatile void __attribute__((noderef, address_space(1))) *);
extern void __chk_io_ptr(const volatile void __attribute__((noderef, address_space(2))) *);
#endif
#if !definedEx(__CHECKER__)















#endif
#if definedEx(__KERNEL__)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 1



/*
 * Common definitions for all gcc versions go here.
 */


/* Optimization barrier */
/* The "volatile" is due to gcc bugs */


/*
 * This macro obfuscates arithmetic on a variable address so that gcc
 * shouldn't recognize the original var, and make assumptions about it.
 *
 * This is needed because the C standard makes it undefined to do
 * pointer arithmetic on "objects" outside their boundaries and the
 * gcc optimizers assume this is the case. In particular they
 * assume such arithmetic does not wrap.
 *
 * A miscompilation has been observed because of this on PPC.
 * To work around it we hide the relationship of the pointer and the object
 * using this macro.
 *
 * Versions of the ppc64 compiler before 4.1 had a bug where use of
 * RELOC_HIDE could trash r30. The bug can be worked around by changing
 * the inline assembly constraint from =g to =r, in this particular
 * case either is valid.
 */





/* &a[0] degrades to a pointer: a different type from an array */



/*
 * Force always-inline if the user requests it so via the .config,
 * or if gcc is too old:
 */
#if (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING))



#endif




/*
 * it doesn't make sense on ARM (currently the only user of __naked) to trace
 * naked functions because then mcount is called without stack and frame pointer
 * being set up and there is no chance to restore the lr register to the value
 * before mcount was called.
 */




/*
 * From the GCC manual:
 *
 * Many functions have no effects except the return value and their
 * return value depends only on the parameters and/or global
 * variables.  Such a function can be subject to common subexpression
 * elimination and loop optimization just as an arithmetic operator
 * would be.
 * [...]
 */











#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc4.h" 1



/* GCC 4.1.[01] miscompiles __weak */










/*
 * A trick to suppress uninitialized variable warning without generating any
 * code
 */



/* Mark functions as cold. gcc will assume any path leading to a call
   to them will be unlikely.  This means a lot of manual unlikely()s
   are unnecessary now for any paths leading to the usual suspects
   like BUG(), printk(), panic() etc. [but let's keep them for now for
   older compilers]

   Early snapshots of gcc 4.3 don't support this and we can't detect this
   in the preprocessor, but we can live with this because they're unreleased.
   Maketime probing would be overkill here.

   gcc also has a __attribute__((__hot__)) to move hot functions into
   a special section, but I don't see any sense in this right now in
   the kernel context */























#line 89 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 2
#line 44 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2



/* Intel compiler defines __GNUC__. So we will overwrite implementations
 * coming from above header files here
 */
#if definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 1



#if definedEx(__ECC)
/* Some compiler specific definitions are overwritten here
 * for Intel ECC compiler
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
#if !definedEx(_ASM_IA64_INTRINSICS_H)


/*
 * Compiler-dependent intrinsics.
 *
 * Copyright (C) 2002-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1
#if !definedEx(_LINUX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1
#if !definedEx(_ASM_IA64_TYPES_H)


/*
 * This file is never included by application software unless explicitly
 * requested (e.g., via linux/types.h) in which case the application is
 * Linux specific so (user-) name space pollution is not a major issue.
 * However, for interoperability, libraries still need to be careful to
 * avoid naming clashes.
 *
 * Based on <asm-alpha/types.h>.
 *
 * Modified 1998-2000, 2002
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 1
/*
 * asm-generic/int-ll64.h
 *
 * Integer declarations for architectures which use "long long"
 * for 64-bit types.
 */

#if !definedEx(_ASM_GENERIC_INT_LL64_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 1
#if !definedEx(__ASM_IA64_BITSPERLONG_H)




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitsperlong.h" 1
#if !definedEx(__ASM_GENERIC_BITS_PER_LONG)


/*
 * There seems to be no way of detecting this automatically from user
 * space, so 64 bit architectures should override this in their
 * bitsperlong.h. In particular, an architecture that supports
 * both 32 and 64 bit user space must not rely on CONFIG_64BIT
 * to decide it, but rather check a compiler provided macro.
 */




#if definedEx(CONFIG_64BIT)

#endif
#if !definedEx(CONFIG_64BIT)

#endif
/*
 * FIXME: The check currently breaks x86-64 build, so it's
 * temporarily disabled. Please fix x86-64 and reenable
 */




#endif
#line 8 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 2

#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 2


/*
 * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
 * header files exported to user space
 */

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
 





typedef signed char s8;
typedef unsigned char u8;

typedef signed short s16;
typedef unsigned short u16;

typedef signed int s32;
typedef unsigned int u32;

typedef signed long long s64;
typedef unsigned long long u64;










 










#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 2
 





 


typedef unsigned int umode_t;

/*
 * These aren't exported outside the kernel to avoid name space clashes
 */

struct fnptr {
	unsigned long ip;
	unsigned long gp;
};

/* DMA addresses are 64-bits wide, in general.  */
typedef u64 dma_addr_t;



#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2







#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 1
#if !definedEx(_LINUX_POSIX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 1
#if !definedEx(_LINUX_STDDEF_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1



















 


































	
	
	
	
		
			
			
		
		
			
			
		
		
	





























































 






























 
















































































































#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 2


#if definedEx(__cplusplus)

#endif
#if !definedEx(__cplusplus)

#endif

enum {
	false	= 0,
	true	= 1
};




 


#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

/*
 * This allows for 1024 file descriptors: if NR_OPEN is ever grown
 * beyond that you'll have to change this too. But 1024 fd's seem to be
 * enough even for such "real" unices like OSF/1, so hopefully this is
 * one limit that doesn't have to be changed [again].
 *
 * Note that POSIX wants the FD_CLEAR(fd,fdsetp) defines to be in
 * <sys/time.h> (and thus <linux/time.h>) - but this is a more logical
 * place for them. Solved by having dummy defines in <sys/time.h>.
 */

/*
 * Those macros may have been defined in <gnu/types.h>. But we always
 * use the ones here. 
 */















typedef struct {
	unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;

/* Type of a signal handler.  */
typedef void (*__kernel_sighandler_t)(int);

/* Type of a SYSV IPC key.  */
typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/posix_types.h" 1
#if !definedEx(_ASM_IA64_POSIX_TYPES_H)


/*
 * This file is generally used by user-level software, so you need to
 * be a little careful about namespace pollution etc.  Also, we cannot
 * assume GCC is being used.
 *
 * Based on <asm-alpha/posix_types.h>.
 *
 * Modified 1998-2000, 2003
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */

typedef unsigned long	__kernel_ino_t;
typedef unsigned int	__kernel_mode_t;
typedef unsigned int	__kernel_nlink_t;
typedef long		__kernel_off_t;
typedef long long	__kernel_loff_t;
typedef int		__kernel_pid_t;
typedef int		__kernel_ipc_pid_t;
typedef unsigned int	__kernel_uid_t;
typedef unsigned int	__kernel_gid_t;
typedef unsigned long	__kernel_size_t;
typedef long		__kernel_ssize_t;
typedef long		__kernel_ptrdiff_t;
typedef long		__kernel_time_t;
typedef long		__kernel_suseconds_t;
typedef long		__kernel_clock_t;
typedef int		__kernel_timer_t;
typedef int		__kernel_clockid_t;
typedef int		__kernel_daddr_t;
typedef char *		__kernel_caddr_t;
typedef unsigned long	__kernel_sigset_t;	/* at least 32 bits */
typedef unsigned short	__kernel_uid16_t;
typedef unsigned short	__kernel_gid16_t;

typedef struct {
	int	val[2];
} __kernel_fsid_t;

typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_uid_t __kernel_uid32_t;
typedef __kernel_gid_t __kernel_gid32_t;

typedef unsigned int	__kernel_old_dev_t;









 /* With GNU C, use inline functions instead so args are evaluated only once: */


static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
__inline__ __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
__inline__
#endif
 void __FD_SET(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] |= (1UL<<_rem);
}


static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
__inline__ __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
__inline__
#endif
 void __FD_CLR(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] &= ~(1UL<<_rem);
}


static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
__inline__ __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
__inline__
#endif
 int __FD_ISSET(unsigned long fd, const __kernel_fd_set *p)
{ 
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	return (p->fds_bits[_tmp] & (1UL<<_rem)) != 0;
}

/*
 * This will unroll the loop for the normal constant case (8 ints,
 * for a 256-bit fd_set)
 */

static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
__inline__ __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
__inline__
#endif
 void __FD_ZERO(__kernel_fd_set *p)
{
	unsigned long *tmp = p->fds_bits;
	int i;

	if (__builtin_constant_p((1024/(8 * sizeof(unsigned long))))) {
		switch ((1024/(8 * sizeof(unsigned long)))) {
		      case 16:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
			tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
			return;

		      case 8:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			return;

		      case 4:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			return;
		}
	}
	i = (1024/(8 * sizeof(unsigned long)));
	while (i) {
		i--;
		*tmp = 0;
		tmp++;
	}
}



#endif
#line 49 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

#endif
#line 16 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2


typedef __u32 __kernel_dev_t;

typedef __kernel_fd_set		fd_set;
typedef __kernel_dev_t		dev_t;
typedef __kernel_ino_t		ino_t;
typedef __kernel_mode_t		mode_t;
typedef __kernel_nlink_t	nlink_t;
typedef __kernel_off_t		off_t;
typedef __kernel_pid_t		pid_t;
typedef __kernel_daddr_t	daddr_t;
typedef __kernel_key_t		key_t;
typedef __kernel_suseconds_t	suseconds_t;
typedef __kernel_timer_t	timer_t;
typedef __kernel_clockid_t	clockid_t;
typedef __kernel_mqd_t		mqd_t;

typedef _Bool			bool;

typedef __kernel_uid32_t	uid_t;
typedef __kernel_gid32_t	gid_t;
typedef __kernel_uid16_t        uid16_t;
typedef __kernel_gid16_t        gid16_t;

typedef unsigned long		uintptr_t;

#if definedEx(CONFIG_UID16)
/* This is defined by include/asm-{arch}/posix_types.h */
typedef __kernel_old_uid_t	old_uid_t;
typedef __kernel_old_gid_t	old_gid_t;
#endif

typedef __kernel_loff_t		loff_t;

/*
 * The following typedefs are also protected by individual ifdefs for
 * historical reasons:
 */
#if !definedEx(_SIZE_T)

typedef __kernel_size_t		size_t;
#endif
#if !definedEx(_SSIZE_T)

typedef __kernel_ssize_t	ssize_t;
#endif
#if !definedEx(_PTRDIFF_T)

typedef __kernel_ptrdiff_t	ptrdiff_t;
#endif
#if !definedEx(_TIME_T)

typedef __kernel_time_t		time_t;
#endif
#if !definedEx(_CLOCK_T)

typedef __kernel_clock_t	clock_t;
#endif
#if !definedEx(_CADDR_T)

typedef __kernel_caddr_t	caddr_t;
#endif
/* bsd */
typedef unsigned char		u_char;
typedef unsigned short		u_short;
typedef unsigned int		u_int;
typedef unsigned long		u_long;

/* sysv */
typedef unsigned char		unchar;
typedef unsigned short		ushort;
typedef unsigned int		uint;
typedef unsigned long		ulong;

#if !definedEx(__BIT_TYPES_DEFINED__)


typedef		__u8		u_int8_t;
typedef		__s8		int8_t;
typedef		__u16		u_int16_t;
typedef		__s16		int16_t;
typedef		__u32		u_int32_t;
typedef		__s32		int32_t;

#endif
typedef		__u8		uint8_t;
typedef		__u16		uint16_t;
typedef		__u32		uint32_t;


typedef		__u64		uint64_t;
typedef		__u64		u_int64_t;
typedef		__s64		int64_t;

/* this is a special 64bit data type that is 8-byte aligned */




/**
 * The type used for indexing onto a disc or disc partition.
 *
 * Linux always considers sectors to be 512 bytes long independently
 * of the devices real block size.
 *
 * blkcnt_t is the type of the inode's block count.
 */
#if definedEx(CONFIG_LBDAF)
typedef u64 sector_t;
typedef u64 blkcnt_t;
#endif
#if !definedEx(CONFIG_LBDAF)
typedef unsigned long sector_t;
typedef unsigned long blkcnt_t;
#endif
/*
 * The type of an index into the pagecache.  Use a #define so asm/types.h
 * can override it.
 */
#if !definedEx(pgoff_t)

#endif

/*
 * Below are truly Linux-specific types that should never collide with
 * any application/library that wants linux/types.h.
 */

#if definedEx(__CHECKER__)

#endif
#if !definedEx(__CHECKER__)

#endif
#if definedEx(__CHECK_ENDIAN__)

#endif
#if !definedEx(__CHECK_ENDIAN__)

#endif
typedef __u16 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __le16;
typedef __u16 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __be16;
typedef __u32 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __le32;
typedef __u32 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __be32;
typedef __u64 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __le64;
typedef __u64 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __be64;

typedef __u16 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __sum16;
typedef __u32 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif

#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && definedEx(__INTEL_COMPILER))

#endif
 __wsum;


typedef unsigned 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif
 gfp_t;
typedef unsigned 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER))
__attribute__((bitwise))
#endif
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))

#endif
 fmode_t;

#if definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u64 phys_addr_t;
#endif
#if !definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u32 phys_addr_t;
#endif
typedef phys_addr_t resource_size_t;

typedef struct {
	volatile int counter;
} atomic_t;

#if definedEx(CONFIG_64BIT)
typedef struct {
	volatile long counter;
} atomic64_t;
#endif
struct ustat {
	__kernel_daddr_t	f_tfree;
	__kernel_ino_t		f_tinode;
	char			f_fname[6];
	char			f_fpack[6];
};



#endif
#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
/* include compiler specific intrinsics */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/ia64regs.h" 1
/*
 * Copyright (C) 2002,2003 Intel Corp.
 *      Jun Nakajima <jun.nakajima@intel.com>
 *      Suresh Siddha <suresh.b.siddha@intel.com>
 */

#if !definedEx(_ASM_IA64_IA64REGS_H)


/*
 * Register Names for getreg() and setreg().
 *
 * The "magic" numbers happen to match the values used by the Intel compiler's
 * getreg()/setreg() intrinsics.
 */

/* Special Registers */





/* General Integer Registers */







/* Application Registers */





























/* Control Registers */




























/* Indirect Registers for getindreg() and setindreg() */









#endif
#line 17 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 1
#if !definedEx(_ASM_IA64_INTEL_INTRIN_H)

/*
 * Intel Compiler Intrinsics
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 * Copyright (C) 2005,2006 Hongjiu Lu <hongjiu.lu@intel.com>
 *
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/ia64/ia64intrin.h" 1
/* Overloaded builtins have been ported to C++: nothing is needed
   in the header anymore.  This file intentionally left void.  */
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 2




































































































/* FIXME: need st4.rel.nta intrinsic */






















/* Values for lfhint in __lfetch and __lfetch_fault */























#endif
#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
 












/*
 * Force an unresolved reference if someone tries to use
 * ia64_fetch_and_add() with a bad value.
 */
extern unsigned long __bad_size_for_ia64_fetch_and_add (void);
extern unsigned long __bad_increment_for_ia64_fetch_and_add (void);













































/*
 * This function doesn't exist, so you'll get a linker error if
 * something tries to do an invalid xchg().
 */
extern void ia64_xchg_called_with_bad_pointer (void);






























/*
 * Atomic compare and exchange.  Compare OLD with MEM, if identical,
 * store NEW in MEM.  Return the initial value in MEM.  Success is
 * indicated by comparing RETURN with OLD.
 */



/*
 * This function doesn't exist, so you'll get a linker error
 * if something tries to do an invalid cmpxchg().
 */
extern long ia64_cmpxchg_called_with_bad_pointer (void);









































/* for compatibility with other platforms: */






#if definedEx(CONFIG_IA64_DEBUG_CMPXCHG)











#endif
#if !definedEx(CONFIG_IA64_DEBUG_CMPXCHG)


#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H)


#if definedEx(CONFIG_PARAVIRT)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 30 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/kregs.h" 1
#if !definedEx(_ASM_IA64_KREGS_H)


/*
 * Copyright (C) 2001-2002 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */
/*
 * This file defines the kernel register usage convention used by Linux/ia64.
 */

/*
 * Kernel registers:
 */












/*
 * Translation registers:
 */







/* Processor status register bits: */



















/* The following are not affected by save_flags()/restore_flags(): */














/* A mask of PSR bits that we generally don't want to inherit across a clone2() or an
   execve().  Only list flags here that need to be cleared/set for BOTH clone2() and
   execve().  */
























/* The following are not affected by save_flags()/restore_flags(): */













/* User mask bits: */


/* Default Control Register */






















/* Interrupt Status Register */

















/* ISR code field for non-access instructions */







#endif
#line 31 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/******************************************************************************
 * replacement of intrinsics operations.
 */

struct pv_cpu_ops {
	void (*fc)(void *addr);
	unsigned long (*thash)(unsigned long addr);
	unsigned long (*get_cpuid)(int index);
	unsigned long (*get_pmd)(int index);
	unsigned long (*getreg)(int reg);
	void (*setreg)(int reg, unsigned long val);
	void (*ptcga)(unsigned long addr, unsigned long size);
	unsigned long (*get_rr)(unsigned long index);
	void (*set_rr)(unsigned long index, unsigned long val);
	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,
			       unsigned long val2, unsigned long val3,
			       unsigned long val4);
	void (*ssm_i)(void);
	void (*rsm_i)(void);
	unsigned long (*get_psr_i)(void);
	void (*intrin_local_irq_restore)(unsigned long flags);
};

extern struct pv_cpu_ops pv_cpu_ops;

extern void ia64_native_setreg_func(int regnum, unsigned long val);
extern unsigned long ia64_native_getreg_func(int regnum);

/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/

#if !definedEx(ASM_SUPPORTED)



#endif
/* mask for ia64_native_ssm/rsm() must be constant.("i" constraing).
 * static inline function doesn't satisfy it. */
















/* returned ip value should be the one in the caller,
 * not in __paravirt_getreg() */










/******************************************************************************
 * replacement of hand written assembly codes.
 */
struct pv_cpu_asm_switch {
	unsigned long switch_to;
	unsigned long leave_syscall;
	unsigned long work_processed_syscall;
	unsigned long leave_kernel;
};
void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);




#endif
#if !definedEx(CONFIG_PARAVIRT)
/* fallback for native case */


#endif
#if (definedEx(CONFIG_PARAVIRT) && definedEx(ASM_SUPPORTED))

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(ASM_SUPPORTED))

#endif
/* these routines utilize privilege-sensitive or performance-sensitive
 * privileged instructions so the code must be replaced with
 * paravirtualized versions */







#if definedEx(CONFIG_PARAVIRT)
/******************************************************************************
 * binary patching infrastructure
 */













/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */



/*
 * struct task_struct* (*ia64_switch_to)(void* next_task);
 * void *ia64_leave_syscall;
 * void *ia64_work_processed_syscall
 * void *ia64_leave_kernel;
 */











#if definedEx(ASM_SUPPORTED)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !definedEx(__ASM_PARAVIRT_PATCH_H)



	
	










 #line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stringify.h" 1
#if !definedEx(__LINUX_STRINGIFY_H)


/* Indirect stringification.  Doing two levels allows the parameter to be a
 * macro itself.  For example, compile with -DFOO=bar, __stringify(FOO)
 * converts to "bar".
 */




#endif
#line 42 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
















 











































































































































































 










 


 
































#line 43 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2

/* for binary patch */
struct paravirt_patch_site_bundle {
	void		*sbundle;
	void		*ebundle;
	unsigned long	type;
};

/* label means the beginning of new bundle */










struct paravirt_patch_bundle_elem {
	const void	*sbundle;
	const void	*ebundle;
	unsigned long	type;
};


struct paravirt_patch_site_inst {
	unsigned long	stag;
	unsigned long	etag;
	unsigned long	type;
};










struct paravirt_patch_site_branch {
	unsigned long	tag;
	unsigned long	type;
};

struct paravirt_patch_branch_target {
	const void	*entry;
	unsigned long	type;
};

void
__paravirt_patch_apply_branch(
	unsigned long tag, unsigned long type,
	const struct paravirt_patch_branch_target *entries,
	unsigned int nr_entries);

void
paravirt_patch_reloc_br(unsigned long tag, const void *target);

void
paravirt_patch_reloc_brl(unsigned long tag, const void *target);



unsigned long
ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);

unsigned long
__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,
			      const struct paravirt_patch_bundle_elem *elems,
			      unsigned long nelems,
			      const struct paravirt_patch_bundle_elem **found);

void
paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,
			    const struct paravirt_patch_site_bundle *end);

void
paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,
			  const struct paravirt_patch_site_inst *end);

void paravirt_patch_apply(void);
 




#endif
/*
 * Local variables:
 * mode: C
 * c-set-style: "linux"
 * c-basic-offset: 8
 * tab-width: 8
 * indent-tabs-mode: t
 * End:
 */
#line 178 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/*
 * pv_cpu_ops calling stub.
 * normal function call convension can't be written by gcc
 * inline assembly.
 *
 * from the caller's point of view,
 * the following registers will be clobbered.
 * r2, r3
 * r8-r15
 * r16, r17
 * b6, b7
 * p6-p15
 * ar.ccv
 *
 * from the callee's point of view ,
 * the following registers can be used.
 * r2, r3: scratch
 * r8: scratch, input argument0 and return value
 * r0-r15: scratch, input argument1-5
 * b6: return pointer
 * b7: scratch
 * p6-p15: scratch
 * ar.ccv: scratch
 *
 * other registers must not be changed. especially
 * b0: rp: preserved. gcc ignores b0 in clobbered register.
 * r16: saved gp
 */
/* 5 bundles */

































































































































































































static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_fc (void *arg1) { register void *__arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"1"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(1)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 1)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.fc), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); };
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 unsigned long paravirt_thash (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"2"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(2)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 2)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.thash), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 unsigned long paravirt_get_cpuid (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"3"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(3)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 3)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_cpuid), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 unsigned long paravirt_get_pmd (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"4"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(4)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 4)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_pmd), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_ptcga (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"5"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(5)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 5)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.ptcga), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 unsigned long paravirt_get_rr (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"6"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(6)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 6)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_rr), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_set_rr (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"7"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(7)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 7)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.set_rr), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_ssm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"9"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(9)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 9)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.ssm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_rsm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"10"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(10)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 10)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.rsm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 unsigned long paravirt_get_psr_i (void) { register unsigned long ia64_intri_res asm ("r8"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"11"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(11)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 11)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_psr_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void paravirt_intrin_local_irq_restore (unsigned long arg1) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"12"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(12)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 12)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.intrin_local_irq_restore), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }

static 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__))
inline __attribute__((always_inline))
#endif
#if (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__))
inline
#endif
 void
paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,
			unsigned long val2, unsigned long val3,
			unsigned long val4)
{
	register unsigned long __val0 asm ("r8") = val0;
	register unsigned long __val1 asm ("r9") = val1;
	register unsigned long __val2 asm ("r10") = val2;
	register unsigned long __val3 asm ("r11") = val3;
	register unsigned long __val4 asm ("r14") = val4;

	register unsigned long ia64_clobber0 asm ("r8");
	register unsigned long ia64_clobber1 asm ("r9");
	register unsigned long ia64_clobber2 asm ("r10");
	register unsigned long ia64_clobber3 asm ("r11");
	register unsigned long ia64_clobber4 asm ("r14");

	asm volatile (
#if (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER))
"8"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H))
__stringify(
 8)
#endif
 "\n"
#endif
#if (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n",
					  8)
#endif

		      : "=r"(ia64_clobber0),
			"=r"(ia64_clobber1),
			"=r"(ia64_clobber2),
			"=r"(ia64_clobber3),
			"=r"(ia64_clobber4)
		      : [op_addr] "i"(&pv_cpu_ops.set_rr0_to_rr4),
			"0"(__val0), "1"(__val1), "2"(__val2),
			"3"(__val3), "4"(__val4)
		      : "r2", "r3", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory");
}

/* unsigned long paravirt_getreg(int reg) */















/* void paravirt_setreg(int reg, unsigned long val) */

















#endif
#endif
#endif
#line 202 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2


#if (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__))
#if definedEx(ASM_SUPPORTED)

#endif
#if !definedEx(ASM_SUPPORTED)

#endif

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__))


#endif
/************************************************/
/* Instructions paravirtualized for correctness */
/************************************************/
/* fc, thash, get_cpuid, get_pmd, get_eflags, set_eflags */
/* Note that "ttag" and "cover" are also privilege-sensitive; "ttag"
 * is not currently used (though it may be in a long-format VHPT system!)
 */






/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/













#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 2

/* Intel ECC compiler doesn't support gcc specific asm stmts.
 * It uses intrinsics to do the equivalent things.
 */










/* Intel ECC compiler doesn't support __builtin_types_compatible_p() */


#endif

#line 53 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2
#endif
/*
 * Generic compiler-dependent macros required for kernel
 * build go below this comment. Actual compiler/compiler version
 * specific implementations come from the above header files
 */

struct ftrace_branch_data {
	const char *func;
	const char *file;
	unsigned line;
	union {
		struct {
			unsigned long correct;
			unsigned long incorrect;
		};
		struct {
			unsigned long miss;
			unsigned long hit;
		};
		unsigned long miss_hit[2];
	};
};

/*
 * Note: DISABLE_BRANCH_PROFILING can be used by special lowlevel code
 * to disable branch tracing on a per file basis.
 */
#if (definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(__CHECKER__))
void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect);



















/*
 * Using __builtin_constant_p(x) to ignore cases where the return
 * value is always the same.  This idea is taken from a similar patch
 * written by Daniel Walker.
 */
#if !definedEx(likely)

#endif
#if !definedEx(unlikely)

#endif
#if definedEx(CONFIG_PROFILE_ALL_BRANCHES)
/*
 * "Define 'is'", Bill Clinton
 * "Define 'if'", Steven Rostedt
 */

















#endif
#endif
#if (!definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__))


#endif
/* Optimization barrier */



/* Unreachable code */
#if !definedEx(unreachable)

#endif






#endif
#endif
#if definedEx(__KERNEL__)
/*
 * Allow us to mark functions as 'deprecated' and have gcc emit a nice
 * warning for each use, in hopes of speeding the functions removal.
 * Usage is:
 * 		int __deprecated foo(void)
 */
#if (!definedEx(__deprecated) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif
#if (!definedEx(__must_check) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if !definedEx(CONFIG_ENABLE_MUST_CHECK)


#endif
#if !definedEx(CONFIG_ENABLE_WARN_DEPRECATED)




#endif
/*
 * Allow us to avoid 'defined but not used' warnings on functions and data,
 * as well as force them to be emitted to the assembly file.
 *
 * As of gcc 3.4, static functions that are not marked with attribute((used))
 * may be elided from the assembly file.  As of gcc 3.4, static data not so
 * marked will not be elided, but this may change in a future gcc version.
 *
 * NOTE: Because distributions shipped with a backported unit-at-a-time
 * compiler in gcc 3.3, we must define __used to be __attribute__((used))
 * for gcc >=3.3 instead of 3.4.
 *
 * In prior versions of gcc, such functions and data would be emitted, but
 * would be warned about except with attribute((unused)).
 *
 * Mark functions that are referenced only in inline assembly as __used so
 * the code is emitted even though it appears to be unreferenced.
 */
#if (!definedEx(__used) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if (!definedEx(__maybe_unused) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if (!definedEx(__always_unused) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if (!definedEx(noinline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
/*
 * Rather then using noinline to prevent stack consumption, use
 * noinline_for_stack instead.  For documentaiton reasons.
 */


#if (!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#endif
/*
 * From the GCC manual:
 *
 * Many functions do not examine any values except their arguments,
 * and have no effects except the return value.  Basically this is
 * just slightly more strict class than the `pure' attribute above,
 * since function is not allowed to read global memory.
 *
 * Note that a function that has pointer arguments and examines the
 * data pointed to must _not_ be declared `const'.  Likewise, a
 * function that calls a non-`const' function usually must not be
 * `const'.  It does not make sense for a `const' function to return
 * `void'.
 */
#if (!definedEx(__attribute_const__) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
/*
 * Tell gcc if a function is cold. The compiler will assume any path
 * directly leading to the call is unlikely.
 */

#if (!definedEx(__cold) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
/* Simple shorthand for a section definition */
#if !definedEx(__section)

#endif
/* Are two types/vars the same type (ignoring qualifiers)? */
#if !definedEx(__same_type)

#endif
/* Compile time object size, -1 for unknown */
#if (!definedEx(__compiletime_object_size) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if (!definedEx(__compiletime_warning) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
#if (!definedEx(__compiletime_error) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif
/*
 * Prevent the compiler from merging or refetching accesses.  The compiler
 * is also forbidden from reordering successive instances of ACCESS_ONCE(),
 * but only when the compiler is aware of some particular ordering.  One way
 * to make the compiler aware of ordering is to put the two invocations of
 * ACCESS_ONCE() in different C statements.
 *
 * This macro does absolutely -nothing- to prevent the CPU from reordering,
 * merging, or refetching absolutely anything at any time.  Its main intended
 * use is to mediate communication between process-level code and irq/NMI
 * handlers, all running on the same CPU.
 */


#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/init.h" 2

/* These macros are used to mark some functions or 
 * initialized data (doesn't apply to uninitialized data)
 * as `initialization' functions. The kernel can take this
 * as hint that the function is used only during the initialization
 * phase and free up used memory resources after
 *
 * Usage:
 * For functions:
 * 
 * You should add __init immediately before the function name, like:
 *
 * static void __init initme(int x, int y)
 * {
 *    extern int z; z = x * y;
 * }
 *
 * If the function has a prototype somewhere, you can also add
 * __init between closing brace of the prototype and semicolon:
 *
 * extern int initialize_foobar_device(int, int, int) __init;
 *
 * For initialized data:
 * You should insert __initdata between the variable name and equal
 * sign followed by value, e.g.:
 *
 * static int init_variable __initdata = 0;
 * static const char linux_logo[] __initconst = { 0x32, 0x36, ... };
 *
 * Don't forget to initialize data not at file scope, i.e. within a function,
 * as gcc otherwise puts the data into the bss section and not into the init
 * section.
 * 
 * Also note, that this data cannot be "const".
 */

/* These are for everybody (although not all archs will actually
   discard it in modules) */






/* modpost check for section mismatches during the kernel build.
 * A section mismatch happens when there are references from a
 * code or data section to an init section (both code or data).
 * The init sections are (for most archs) discarded by the kernel
 * when early init has completed so all such references are potential bugs.
 * For exit sections the same issue exists.
 * The following markers are used for the cases where the reference to
 * the *init / *exit section (code or data) is valid and will teach
 * modpost not to issue a warning.
 * The markers follow same syntax rules as __init / __initdata. */




/* compatibility defines */





#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif


/* Used for HOTPLUG */







/* Used for HOTPLUG_CPU */







/* Used for MEMORY_HOTPLUG */







/* For assembly routines */




















/* silence warnings when references are OK */




#if !definedEx(__ASSEMBLY__)
/*
 * Used for initialization calls..
 */
typedef int (*initcall_t)(void);
typedef void (*exitcall_t)(void);

extern initcall_t __con_initcall_start[], __con_initcall_end[];
extern initcall_t __security_initcall_start[], __security_initcall_end[];

/* Used for contructor calls. */
typedef void (*ctor_fn_t)(void);

/* Defined in init/main.c */
extern int do_one_initcall(initcall_t fn);
extern char 
#if (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__section))
__attribute__ ((__section__(".init.data")))
#endif
#if (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__section))
__section(.init.data)
#endif
 boot_command_line[];
extern char *saved_command_line;
extern unsigned int reset_devices;

/* used by init/main.c */
void setup_arch(char **);
void prepare_namespace(void);

extern void (*late_time_init)(void);

extern int initcall_debug;

#endif
  
#if !definedEx(MODULE)
#if !definedEx(__ASSEMBLY__)
/* initcalls are now grouped by functionality into separate 
 * subsections. Ordering inside the subsections is determined
 * by link order. 
 * For backwards compatibility, initcall() puts the call in 
 * the device init subsection.
 *
 * The `id' arg to __define_initcall() is needed so that multiple initcalls
 * can point at the same handler without causing duplicate-symbol build errors.
 */





/*
 * Early initcalls run before initializing SMP.
 *
 * Only for built-in code, not modules.
 */


/*
 * A "pure" initcall has no dependencies on anything else, and purely
 * initializes variables that couldn't be statically initialized.
 *
 * This only exists for built-in code, not for modules.
 */































struct obs_kernel_param {
	const char *str;
	int (*setup_func)(char *);
	int early;
};

/*
 * Only for really core code.  See moduleparam.h for the normal way.
 *
 * Force the alignment so the compiler doesn't space elements of the
 * obs_kernel_param "array" too far apart in .init.setup.
 */











/* NOTE: fn is as per module_param, not __setup!  Emits warning if fn
 * returns non-zero. */



/* Relies on boot_command_line being set */
void 
#if (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__section))
__attribute__ ((__section__(".init.text")))
#endif
#if (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__section))
__section(.init.text)
#endif
 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__cold) || (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__))) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__))
__attribute__((__cold__))
#endif
#if ((definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__cold) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H)) || definedEx(__ASSEMBLY__)) && !definedEx(__cold))

#endif
#if ((definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__cold)) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))
__cold
#endif
 
#if (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__))
__attribute__((no_instrument_function))
#endif
#if (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__))
notrace
#endif
 parse_early_param(void);
void 
#if (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__section))
__attribute__ ((__section__(".init.text")))
#endif
#if (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__section))
__section(.init.text)
#endif
 
#if (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__cold) || (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__))) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__))
__attribute__((__cold__))
#endif
#if ((definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__cold) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H)) || definedEx(__ASSEMBLY__)) && !definedEx(__cold))

#endif
#if ((definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__cold)) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))
__cold
#endif
 
#if (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__))
__attribute__((no_instrument_function))
#endif
#if (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__))
notrace
#endif
 parse_early_options(char *cmdline);
#endif
/**
 * module_init() - driver initialization entry point
 * @x: function to be run at kernel boot time or module insertion
 * 
 * module_init() will either be called during do_initcalls() (if
 * builtin) or at module insertion time (if a module).  There can only
 * be one per module.
 */


/**
 * module_exit() - driver exit entry point
 * @x: function to be run when driver is removed
 * 
 * module_exit() will wrap the driver clean-up code
 * with cleanup_module() when used with rmmod when
 * the driver is a module.  If the driver is statically
 * compiled into the kernel, module_exit() has no effect.
 * There can only be one per module.
 */


#endif
#if definedEx(MODULE)
/* Don't use these in modules, but some people do... */











/* Each module must use one module_init(). */





/* This is only required if you want to be unloadable. */







#endif
/* Data marked not to be saved by software suspend */


/* This means "can be init if no module support, otherwise module load
   may call it." */
#if definedEx(CONFIG_MODULES)






#endif
#if !definedEx(CONFIG_MODULES)






#endif
/* Functions marked as __devexit may be discarded at kernel link time, depending
   on config options.  Newer versions of binutils detect references from
   retained sections to discarded sections and flag an error.  Pointers to
   __devexit functions must use __devexit_p(function_name), the wrapper will
   insert either the function_name or NULL, depending on the config options.
 */
#if (definedEx(MODULE) || definedEx(CONFIG_HOTPLUG))

#endif
#if (!definedEx(MODULE) && !definedEx(CONFIG_HOTPLUG))

#endif
#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif
#endif
#line 22 "/Users/Flavio/Desktop/Workspaces/FSE15/SamplingConstraints/bugs/linux/arch/arm/mach-omap2/board-omap3pandora.c" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 1
#if !definedEx(_LINUX_KERNEL_H)


/*
 * 'kernel.h' contains some often-used function prototypes etc
 */

#if definedEx(__KERNEL__)
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include/stdarg.h" 1
/* Copyright (C) 1989, 1997, 1998, 1999, 2000, 2009 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */

#if !definedEx(_STDARG_H)
#if !definedEx(_ANSI_STDARG_H_)
#if !definedEx(__need___va_list)


#endif


/* Define __gnuc_va_list.  */

#if !definedEx(__GNUC_VA_LIST)

typedef __builtin_va_list __gnuc_va_list;
#endif
/* Define the standard macros for the user,
   if this invocation was from the user program.  */
#if (definedEx(_STDARG_H) || (definedEx(__KERNEL__) && !definedEx(_ANSI_STDARG_H_) && !definedEx(_LINUX_KERNEL_H) && !definedEx(__need___va_list)))








/* Define va_list, if desired, from __gnuc_va_list. */
/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */

#if definedEx(_HIDDEN_VA_LIST)

#endif
#if definedEx(_BSD_VA_LIST)

#endif
#if (definedEx(__svr4__) || (definedEx(_SCO_DS) && !definedEx(__VA_LIST)))
/* SVR4.2 uses _VA_LIST for an internal alias for va_list,
   so we must avoid testing it and setting it here.
   SVR4 uses _VA_LIST as a flag in stdarg.h, but we should
   have no conflict with that.  */
#if !definedEx(_VA_LIST_)

#if definedEx(__i860__)
#if !defined(_VA_LIST)

#endif
#endif
typedef __gnuc_va_list va_list;
#if definedEx(_SCO_DS)

#endif
#endif
#endif
#if (!definedEx(__svr4__) && (!definedEx(_SCO_DS) || definedEx(__VA_LIST)))
/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */
#if (definedEx(__sequent__) || definedEx(__bsdi__) || definedEx(____386BSD____) || definedEx(WINNT) || definedEx(__BSD_NET2__) || definedEx(__FreeBSD__) || !defined(_VA_LIST_))
/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */
#if !definedEx(_VA_LIST_DEFINED)
/* The macro _VA_LIST is used in SCO Unix 3.2.  */
#if !defined(_VA_LIST)
/* The macro _VA_LIST_T_H is used in the Bull dpx2  */
#if !definedEx(_VA_LIST_T_H)
/* The macro __va_list__ is used by BeOS.  */
#if !definedEx(__va_list__)
typedef __gnuc_va_list va_list;
#endif
#endif
#endif
#endif
#if (!definedEx(__bsdi__) && !definedEx(__BSD_NET2__) && !definedEx(__FreeBSD__) && !definedEx(____386BSD____) && !definedEx(__sequent__))

#endif
#if !defined(_VA_LIST)

#endif
#if !definedEx(_VA_LIST_DEFINED)

#endif
#if !definedEx(_VA_LIST_T_H)

#endif
#if !definedEx(__va_list__)

#endif
#endif
#endif
#endif
#endif
#endif
#line 12 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/linkage.h" 1
#if !definedEx(_LINUX_LINKAGE_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1
#if (!definedEx(__LINUX_COMPILER_H) && definedEx(_LINUX_INIT_H))


#if !definedEx(__ASSEMBLY__)
#if definedEx(__CHECKER__)












extern void __chk_user_ptr(const volatile void __attribute__((noderef, address_space(1))) *);
extern void __chk_io_ptr(const volatile void __attribute__((noderef, address_space(2))) *);
#endif
#if !definedEx(__CHECKER__)















#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 1



/*
 * Common definitions for all gcc versions go here.
 */


/* Optimization barrier */
/* The "volatile" is due to gcc bugs */


/*
 * This macro obfuscates arithmetic on a variable address so that gcc
 * shouldn't recognize the original var, and make assumptions about it.
 *
 * This is needed because the C standard makes it undefined to do
 * pointer arithmetic on "objects" outside their boundaries and the
 * gcc optimizers assume this is the case. In particular they
 * assume such arithmetic does not wrap.
 *
 * A miscompilation has been observed because of this on PPC.
 * To work around it we hide the relationship of the pointer and the object
 * using this macro.
 *
 * Versions of the ppc64 compiler before 4.1 had a bug where use of
 * RELOC_HIDE could trash r30. The bug can be worked around by changing
 * the inline assembly constraint from =g to =r, in this particular
 * case either is valid.
 */





/* &a[0] degrades to a pointer: a different type from an array */



/*
 * Force always-inline if the user requests it so via the .config,
 * or if gcc is too old:
 */
#if (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING))



#endif




/*
 * it doesn't make sense on ARM (currently the only user of __naked) to trace
 * naked functions because then mcount is called without stack and frame pointer
 * being set up and there is no chance to restore the lr register to the value
 * before mcount was called.
 */




/*
 * From the GCC manual:
 *
 * Many functions have no effects except the return value and their
 * return value depends only on the parameters and/or global
 * variables.  Such a function can be subject to common subexpression
 * elimination and loop optimization just as an arithmetic operator
 * would be.
 * [...]
 */











#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc4.h" 1



/* GCC 4.1.[01] miscompiles __weak */










/*
 * A trick to suppress uninitialized variable warning without generating any
 * code
 */



/* Mark functions as cold. gcc will assume any path leading to a call
   to them will be unlikely.  This means a lot of manual unlikely()s
   are unnecessary now for any paths leading to the usual suspects
   like BUG(), printk(), panic() etc. [but let's keep them for now for
   older compilers]

   Early snapshots of gcc 4.3 don't support this and we can't detect this
   in the preprocessor, but we can live with this because they're unreleased.
   Maketime probing would be overkill here.

   gcc also has a __attribute__((__hot__)) to move hot functions into
   a special section, but I don't see any sense in this right now in
   the kernel context */























#line 89 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 2
#line 44 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2



/* Intel compiler defines __GNUC__. So we will overwrite implementations
 * coming from above header files here
 */
#if definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 1



#if definedEx(__ECC)
/* Some compiler specific definitions are overwritten here
 * for Intel ECC compiler
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
#if (!definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)))


/*
 * Compiler-dependent intrinsics.
 *
 * Copyright (C) 2002-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1
#if (!definedEx(_LINUX_TYPES_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1
#if (!definedEx(_ASM_IA64_TYPES_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


/*
 * This file is never included by application software unless explicitly
 * requested (e.g., via linux/types.h) in which case the application is
 * Linux specific so (user-) name space pollution is not a major issue.
 * However, for interoperability, libraries still need to be careful to
 * avoid naming clashes.
 *
 * Based on <asm-alpha/types.h>.
 *
 * Modified 1998-2000, 2002
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 1
/*
 * asm-generic/int-ll64.h
 *
 * Integer declarations for architectures which use "long long"
 * for 64-bit types.
 */

#if (!definedEx(_ASM_GENERIC_INT_LL64_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 1
#if !defined(__ASM_IA64_BITSPERLONG_H)




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitsperlong.h" 1
#if !defined(__ASM_GENERIC_BITS_PER_LONG)


/*
 * There seems to be no way of detecting this automatically from user
 * space, so 64 bit architectures should override this in their
 * bitsperlong.h. In particular, an architecture that supports
 * both 32 and 64 bit user space must not rely on CONFIG_64BIT
 * to decide it, but rather check a compiler provided macro.
 */




#if definedEx(CONFIG_64BIT)

#endif
#if !definedEx(CONFIG_64BIT)

#endif
/*
 * FIXME: The check currently breaks x86-64 build, so it's
 * temporarily disabled. Please fix x86-64 and reenable
 */




#endif
#line 8 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 2

#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 2


/*
 * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
 * header files exported to user space
 */

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
 





typedef signed char s8;
typedef unsigned char u8;

typedef signed short s16;
typedef unsigned short u16;

typedef signed int s32;
typedef unsigned int u32;

typedef signed long long s64;
typedef unsigned long long u64;










 










#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 2
 





 


typedef unsigned int umode_t;

/*
 * These aren't exported outside the kernel to avoid name space clashes
 */

struct fnptr {
	unsigned long ip;
	unsigned long gp;
};

/* DMA addresses are 64-bits wide, in general.  */
typedef u64 dma_addr_t;



#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2







#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 1
#if (!definedEx(_LINUX_POSIX_TYPES_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 1
#if (!definedEx(_LINUX_STDDEF_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_LINUX_POSIX_TYPES_H)))


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1



















 


































	
	
	
	
		
			
			
		
		
			
			
		
		
	





























































 






























 
















































































































#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 2


#if definedEx(__cplusplus)

#endif
#if !definedEx(__cplusplus)

#endif

enum {
	false	= 0,
	true	= 1
};




 


#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

/*
 * This allows for 1024 file descriptors: if NR_OPEN is ever grown
 * beyond that you'll have to change this too. But 1024 fd's seem to be
 * enough even for such "real" unices like OSF/1, so hopefully this is
 * one limit that doesn't have to be changed [again].
 *
 * Note that POSIX wants the FD_CLEAR(fd,fdsetp) defines to be in
 * <sys/time.h> (and thus <linux/time.h>) - but this is a more logical
 * place for them. Solved by having dummy defines in <sys/time.h>.
 */

/*
 * Those macros may have been defined in <gnu/types.h>. But we always
 * use the ones here. 
 */















typedef struct {
	unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;

/* Type of a signal handler.  */
typedef void (*__kernel_sighandler_t)(int);

/* Type of a SYSV IPC key.  */
typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/posix_types.h" 1
#if (!definedEx(_ASM_IA64_POSIX_TYPES_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_LINUX_POSIX_TYPES_H)))


/*
 * This file is generally used by user-level software, so you need to
 * be a little careful about namespace pollution etc.  Also, we cannot
 * assume GCC is being used.
 *
 * Based on <asm-alpha/posix_types.h>.
 *
 * Modified 1998-2000, 2003
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */

typedef unsigned long	__kernel_ino_t;
typedef unsigned int	__kernel_mode_t;
typedef unsigned int	__kernel_nlink_t;
typedef long		__kernel_off_t;
typedef long long	__kernel_loff_t;
typedef int		__kernel_pid_t;
typedef int		__kernel_ipc_pid_t;
typedef unsigned int	__kernel_uid_t;
typedef unsigned int	__kernel_gid_t;
typedef unsigned long	__kernel_size_t;
typedef long		__kernel_ssize_t;
typedef long		__kernel_ptrdiff_t;
typedef long		__kernel_time_t;
typedef long		__kernel_suseconds_t;
typedef long		__kernel_clock_t;
typedef int		__kernel_timer_t;
typedef int		__kernel_clockid_t;
typedef int		__kernel_daddr_t;
typedef char *		__kernel_caddr_t;
typedef unsigned long	__kernel_sigset_t;	/* at least 32 bits */
typedef unsigned short	__kernel_uid16_t;
typedef unsigned short	__kernel_gid16_t;

typedef struct {
	int	val[2];
} __kernel_fsid_t;

typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_uid_t __kernel_uid32_t;
typedef __kernel_gid_t __kernel_gid32_t;

typedef unsigned int	__kernel_old_dev_t;









 /* With GNU C, use inline functions instead so args are evaluated only once: */


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
__inline__
#endif
 void __FD_SET(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] |= (1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
__inline__
#endif
 void __FD_CLR(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] &= ~(1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
__inline__
#endif
 int __FD_ISSET(unsigned long fd, const __kernel_fd_set *p)
{ 
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	return (p->fds_bits[_tmp] & (1UL<<_rem)) != 0;
}

/*
 * This will unroll the loop for the normal constant case (8 ints,
 * for a 256-bit fd_set)
 */

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
__inline__
#endif
 void __FD_ZERO(__kernel_fd_set *p)
{
	unsigned long *tmp = p->fds_bits;
	int i;

	if (__builtin_constant_p((1024/(8 * sizeof(unsigned long))))) {
		switch ((1024/(8 * sizeof(unsigned long)))) {
		      case 16:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
			tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
			return;

		      case 8:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			return;

		      case 4:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			return;
		}
	}
	i = (1024/(8 * sizeof(unsigned long)));
	while (i) {
		i--;
		*tmp = 0;
		tmp++;
	}
}



#endif
#line 49 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

#endif
#line 16 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2


typedef __u32 __kernel_dev_t;

typedef __kernel_fd_set		fd_set;
typedef __kernel_dev_t		dev_t;
typedef __kernel_ino_t		ino_t;
typedef __kernel_mode_t		mode_t;
typedef __kernel_nlink_t	nlink_t;
typedef __kernel_off_t		off_t;
typedef __kernel_pid_t		pid_t;
typedef __kernel_daddr_t	daddr_t;
typedef __kernel_key_t		key_t;
typedef __kernel_suseconds_t	suseconds_t;
typedef __kernel_timer_t	timer_t;
typedef __kernel_clockid_t	clockid_t;
typedef __kernel_mqd_t		mqd_t;

typedef _Bool			bool;

typedef __kernel_uid32_t	uid_t;
typedef __kernel_gid32_t	gid_t;
typedef __kernel_uid16_t        uid16_t;
typedef __kernel_gid16_t        gid16_t;

typedef unsigned long		uintptr_t;

#if definedEx(CONFIG_UID16)
/* This is defined by include/asm-{arch}/posix_types.h */
typedef __kernel_old_uid_t	old_uid_t;
typedef __kernel_old_gid_t	old_gid_t;
#endif

typedef __kernel_loff_t		loff_t;

/*
 * The following typedefs are also protected by individual ifdefs for
 * historical reasons:
 */
#if (!definedEx(_SIZE_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_size_t		size_t;
#endif
#if (!definedEx(_SSIZE_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_ssize_t	ssize_t;
#endif
#if (!definedEx(_PTRDIFF_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_ptrdiff_t	ptrdiff_t;
#endif
#if (!definedEx(_TIME_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_time_t		time_t;
#endif
#if (!definedEx(_CLOCK_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_clock_t	clock_t;
#endif
#if (!definedEx(_CADDR_T) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

typedef __kernel_caddr_t	caddr_t;
#endif
/* bsd */
typedef unsigned char		u_char;
typedef unsigned short		u_short;
typedef unsigned int		u_int;
typedef unsigned long		u_long;

/* sysv */
typedef unsigned char		unchar;
typedef unsigned short		ushort;
typedef unsigned int		uint;
typedef unsigned long		ulong;

#if (!definedEx(__BIT_TYPES_DEFINED__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


typedef		__u8		u_int8_t;
typedef		__s8		int8_t;
typedef		__u16		u_int16_t;
typedef		__s16		int16_t;
typedef		__u32		u_int32_t;
typedef		__s32		int32_t;

#endif
typedef		__u8		uint8_t;
typedef		__u16		uint16_t;
typedef		__u32		uint32_t;


typedef		__u64		uint64_t;
typedef		__u64		u_int64_t;
typedef		__s64		int64_t;

/* this is a special 64bit data type that is 8-byte aligned */




/**
 * The type used for indexing onto a disc or disc partition.
 *
 * Linux always considers sectors to be 512 bytes long independently
 * of the devices real block size.
 *
 * blkcnt_t is the type of the inode's block count.
 */
#if definedEx(CONFIG_LBDAF)
typedef u64 sector_t;
typedef u64 blkcnt_t;
#endif
#if !definedEx(CONFIG_LBDAF)
typedef unsigned long sector_t;
typedef unsigned long blkcnt_t;
#endif
/*
 * The type of an index into the pagecache.  Use a #define so asm/types.h
 * can override it.
 */
#if (!definedEx(pgoff_t) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

#endif

/*
 * Below are truly Linux-specific types that should never collide with
 * any application/library that wants linux/types.h.
 */

#if definedEx(__CHECKER__)

#endif
#if !definedEx(__CHECKER__)

#endif
#if definedEx(__CHECK_ENDIAN__)

#endif
#if !definedEx(__CHECK_ENDIAN__)

#endif
typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __le16;
typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __be16;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __le32;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __be32;
typedef __u64 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __le64;
typedef __u64 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __be64;

typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __sum16;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 __wsum;


typedef unsigned 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 gfp_t;
typedef unsigned 
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))

#endif
 fmode_t;

#if definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u64 phys_addr_t;
#endif
#if !definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u32 phys_addr_t;
#endif
typedef phys_addr_t resource_size_t;

typedef struct {
	volatile int counter;
} atomic_t;

#if definedEx(CONFIG_64BIT)
typedef struct {
	volatile long counter;
} atomic64_t;
#endif
struct ustat {
	__kernel_daddr_t	f_tfree;
	__kernel_ino_t		f_tinode;
	char			f_fname[6];
	char			f_fpack[6];
};



#endif
#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
/* include compiler specific intrinsics */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/ia64regs.h" 1
/*
 * Copyright (C) 2002,2003 Intel Corp.
 *      Jun Nakajima <jun.nakajima@intel.com>
 *      Suresh Siddha <suresh.b.siddha@intel.com>
 */

#if (!definedEx(_ASM_IA64_IA64REGS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


/*
 * Register Names for getreg() and setreg().
 *
 * The "magic" numbers happen to match the values used by the Intel compiler's
 * getreg()/setreg() intrinsics.
 */

/* Special Registers */





/* General Integer Registers */







/* Application Registers */





























/* Control Registers */




























/* Indirect Registers for getindreg() and setindreg() */









#endif
#line 17 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 1
#if (!definedEx(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))

/*
 * Intel Compiler Intrinsics
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 * Copyright (C) 2005,2006 Hongjiu Lu <hongjiu.lu@intel.com>
 *
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/ia64/ia64intrin.h" 1
/* Overloaded builtins have been ported to C++: nothing is needed
   in the header anymore.  This file intentionally left void.  */
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 2




































































































/* FIXME: need st4.rel.nta intrinsic */






















/* Values for lfhint in __lfetch and __lfetch_fault */























#endif
#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
 












/*
 * Force an unresolved reference if someone tries to use
 * ia64_fetch_and_add() with a bad value.
 */
extern unsigned long __bad_size_for_ia64_fetch_and_add (void);
extern unsigned long __bad_increment_for_ia64_fetch_and_add (void);













































/*
 * This function doesn't exist, so you'll get a linker error if
 * something tries to do an invalid xchg().
 */
extern void ia64_xchg_called_with_bad_pointer (void);






























/*
 * Atomic compare and exchange.  Compare OLD with MEM, if identical,
 * store NEW in MEM.  Return the initial value in MEM.  Success is
 * indicated by comparing RETURN with OLD.
 */



/*
 * This function doesn't exist, so you'll get a linker error
 * if something tries to do an invalid cmpxchg().
 */
extern long ia64_cmpxchg_called_with_bad_pointer (void);









































/* for compatibility with other platforms: */






#if definedEx(CONFIG_IA64_DEBUG_CMPXCHG)











#endif
#if !definedEx(CONFIG_IA64_DEBUG_CMPXCHG)


#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if (!definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))


#if definedEx(CONFIG_PARAVIRT)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 30 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/kregs.h" 1
#if (!definedEx(_ASM_IA64_KREGS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))


/*
 * Copyright (C) 2001-2002 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */
/*
 * This file defines the kernel register usage convention used by Linux/ia64.
 */

/*
 * Kernel registers:
 */












/*
 * Translation registers:
 */







/* Processor status register bits: */



















/* The following are not affected by save_flags()/restore_flags(): */














/* A mask of PSR bits that we generally don't want to inherit across a clone2() or an
   execve().  Only list flags here that need to be cleared/set for BOTH clone2() and
   execve().  */
























/* The following are not affected by save_flags()/restore_flags(): */













/* User mask bits: */


/* Default Control Register */






















/* Interrupt Status Register */

















/* ISR code field for non-access instructions */







#endif
#line 31 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/******************************************************************************
 * replacement of intrinsics operations.
 */

struct pv_cpu_ops {
	void (*fc)(void *addr);
	unsigned long (*thash)(unsigned long addr);
	unsigned long (*get_cpuid)(int index);
	unsigned long (*get_pmd)(int index);
	unsigned long (*getreg)(int reg);
	void (*setreg)(int reg, unsigned long val);
	void (*ptcga)(unsigned long addr, unsigned long size);
	unsigned long (*get_rr)(unsigned long index);
	void (*set_rr)(unsigned long index, unsigned long val);
	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,
			       unsigned long val2, unsigned long val3,
			       unsigned long val4);
	void (*ssm_i)(void);
	void (*rsm_i)(void);
	unsigned long (*get_psr_i)(void);
	void (*intrin_local_irq_restore)(unsigned long flags);
};

extern struct pv_cpu_ops pv_cpu_ops;

extern void ia64_native_setreg_func(int regnum, unsigned long val);
extern unsigned long ia64_native_getreg_func(int regnum);

/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/

#if !definedEx(ASM_SUPPORTED)



#endif
/* mask for ia64_native_ssm/rsm() must be constant.("i" constraing).
 * static inline function doesn't satisfy it. */
















/* returned ip value should be the one in the caller,
 * not in __paravirt_getreg() */










/******************************************************************************
 * replacement of hand written assembly codes.
 */
struct pv_cpu_asm_switch {
	unsigned long switch_to;
	unsigned long leave_syscall;
	unsigned long work_processed_syscall;
	unsigned long leave_kernel;
};
void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);




#endif
#if !definedEx(CONFIG_PARAVIRT)
/* fallback for native case */


#endif
#if (definedEx(CONFIG_PARAVIRT) && definedEx(ASM_SUPPORTED))

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(ASM_SUPPORTED))

#endif
/* these routines utilize privilege-sensitive or performance-sensitive
 * privileged instructions so the code must be replaced with
 * paravirtualized versions */







#if definedEx(CONFIG_PARAVIRT)
/******************************************************************************
 * binary patching infrastructure
 */













/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */



/*
 * struct task_struct* (*ia64_switch_to)(void* next_task);
 * void *ia64_leave_syscall;
 * void *ia64_work_processed_syscall
 * void *ia64_leave_kernel;
 */











#if definedEx(ASM_SUPPORTED)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(__ASM_PARAVIRT_PATCH_H)



	
	










 #line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stringify.h" 1
#if !defined(__LINUX_STRINGIFY_H)


/* Indirect stringification.  Doing two levels allows the parameter to be a
 * macro itself.  For example, compile with -DFOO=bar, __stringify(FOO)
 * converts to "bar".
 */




#endif
#line 42 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
















 











































































































































































 










 


 
































#line 43 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2

/* for binary patch */
struct paravirt_patch_site_bundle {
	void		*sbundle;
	void		*ebundle;
	unsigned long	type;
};

/* label means the beginning of new bundle */










struct paravirt_patch_bundle_elem {
	const void	*sbundle;
	const void	*ebundle;
	unsigned long	type;
};


struct paravirt_patch_site_inst {
	unsigned long	stag;
	unsigned long	etag;
	unsigned long	type;
};










struct paravirt_patch_site_branch {
	unsigned long	tag;
	unsigned long	type;
};

struct paravirt_patch_branch_target {
	const void	*entry;
	unsigned long	type;
};

void
__paravirt_patch_apply_branch(
	unsigned long tag, unsigned long type,
	const struct paravirt_patch_branch_target *entries,
	unsigned int nr_entries);

void
paravirt_patch_reloc_br(unsigned long tag, const void *target);

void
paravirt_patch_reloc_brl(unsigned long tag, const void *target);



unsigned long
ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);

unsigned long
__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,
			      const struct paravirt_patch_bundle_elem *elems,
			      unsigned long nelems,
			      const struct paravirt_patch_bundle_elem **found);

void
paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,
			    const struct paravirt_patch_site_bundle *end);

void
paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,
			  const struct paravirt_patch_site_inst *end);

void paravirt_patch_apply(void);
 




#endif
/*
 * Local variables:
 * mode: C
 * c-set-style: "linux"
 * c-basic-offset: 8
 * tab-width: 8
 * indent-tabs-mode: t
 * End:
 */
#line 178 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/*
 * pv_cpu_ops calling stub.
 * normal function call convension can't be written by gcc
 * inline assembly.
 *
 * from the caller's point of view,
 * the following registers will be clobbered.
 * r2, r3
 * r8-r15
 * r16, r17
 * b6, b7
 * p6-p15
 * ar.ccv
 *
 * from the callee's point of view ,
 * the following registers can be used.
 * r2, r3: scratch
 * r8: scratch, input argument0 and return value
 * r0-r15: scratch, input argument1-5
 * b6: return pointer
 * b7: scratch
 * p6-p15: scratch
 * ar.ccv: scratch
 *
 * other registers must not be changed. especially
 * b0: rp: preserved. gcc ignores b0 in clobbered register.
 * r16: saved gp
 */
/* 5 bundles */

































































































































































































static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_fc (void *arg1) { register void *__arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"1"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(1)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 1)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.fc), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); };
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 unsigned long paravirt_thash (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"2"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(2)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 2)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.thash), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 unsigned long paravirt_get_cpuid (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"3"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(3)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 3)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_cpuid), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 unsigned long paravirt_get_pmd (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"4"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(4)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 4)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_pmd), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_ptcga (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"5"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(5)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 5)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.ptcga), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 unsigned long paravirt_get_rr (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"6"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(6)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 6)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_rr), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_set_rr (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"7"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(7)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 7)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.set_rr), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_ssm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"9"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(9)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 9)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.ssm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_rsm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"10"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(10)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 10)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.rsm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 unsigned long paravirt_get_psr_i (void) { register unsigned long ia64_intri_res asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"11"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(11)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 11)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_psr_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void paravirt_intrin_local_irq_restore (unsigned long arg1) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"12"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(12)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 12)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.intrin_local_irq_restore), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)))
inline
#endif
 void
paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,
			unsigned long val2, unsigned long val3,
			unsigned long val4)
{
	register unsigned long __val0 asm ("r8") = val0;
	register unsigned long __val1 asm ("r9") = val1;
	register unsigned long __val2 asm ("r10") = val2;
	register unsigned long __val3 asm ("r11") = val3;
	register unsigned long __val4 asm ("r14") = val4;

	register unsigned long ia64_clobber0 asm ("r8");
	register unsigned long ia64_clobber1 asm ("r9");
	register unsigned long ia64_clobber2 asm ("r10");
	register unsigned long ia64_clobber3 asm ("r11");
	register unsigned long ia64_clobber4 asm ("r14");

	asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"8"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(
 8)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n",
					  8)
#endif

		      : "=r"(ia64_clobber0),
			"=r"(ia64_clobber1),
			"=r"(ia64_clobber2),
			"=r"(ia64_clobber3),
			"=r"(ia64_clobber4)
		      : [op_addr] "i"(&pv_cpu_ops.set_rr0_to_rr4),
			"0"(__val0), "1"(__val1), "2"(__val2),
			"3"(__val3), "4"(__val4)
		      : "r2", "r3", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory");
}

/* unsigned long paravirt_getreg(int reg) */















/* void paravirt_setreg(int reg, unsigned long val) */

















#endif
#endif
#endif
#line 202 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2


#if (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__))
#if definedEx(ASM_SUPPORTED)

#endif
#if !definedEx(ASM_SUPPORTED)

#endif

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__))


#endif
/************************************************/
/* Instructions paravirtualized for correctness */
/************************************************/
/* fc, thash, get_cpuid, get_pmd, get_eflags, set_eflags */
/* Note that "ttag" and "cover" are also privilege-sensitive; "ttag"
 * is not currently used (though it may be in a long-format VHPT system!)
 */






/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/













#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 2

/* Intel ECC compiler doesn't support gcc specific asm stmts.
 * It uses intrinsics to do the equivalent things.
 */










/* Intel ECC compiler doesn't support __builtin_types_compatible_p() */


#endif

#line 53 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2
#endif
/*
 * Generic compiler-dependent macros required for kernel
 * build go below this comment. Actual compiler/compiler version
 * specific implementations come from the above header files
 */

struct ftrace_branch_data {
	const char *func;
	const char *file;
	unsigned line;
	union {
		struct {
			unsigned long correct;
			unsigned long incorrect;
		};
		struct {
			unsigned long miss;
			unsigned long hit;
		};
		unsigned long miss_hit[2];
	};
};

/*
 * Note: DISABLE_BRANCH_PROFILING can be used by special lowlevel code
 * to disable branch tracing on a per file basis.
 */
#if (definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(__CHECKER__))
void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect);



















/*
 * Using __builtin_constant_p(x) to ignore cases where the return
 * value is always the same.  This idea is taken from a similar patch
 * written by Daniel Walker.
 */
#if !defined(likely)

#endif
#if !defined(unlikely)

#endif
#if definedEx(CONFIG_PROFILE_ALL_BRANCHES)
/*
 * "Define 'is'", Bill Clinton
 * "Define 'if'", Steven Rostedt
 */

















#endif
#endif
#if (!definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__))


#endif
/* Optimization barrier */



/* Unreachable code */
#if (!definedEx(unreachable) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)))

#endif







#endif

/*
 * Allow us to mark functions as 'deprecated' and have gcc emit a nice
 * warning for each use, in hopes of speeding the functions removal.
 * Usage is:
 * 		int __deprecated foo(void)
 */
#if !defined(__deprecated)

#endif
#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif
#if !defined(__must_check)

#endif
#if !definedEx(CONFIG_ENABLE_MUST_CHECK)


#endif
#if !definedEx(CONFIG_ENABLE_WARN_DEPRECATED)




#endif
/*
 * Allow us to avoid 'defined but not used' warnings on functions and data,
 * as well as force them to be emitted to the assembly file.
 *
 * As of gcc 3.4, static functions that are not marked with attribute((used))
 * may be elided from the assembly file.  As of gcc 3.4, static data not so
 * marked will not be elided, but this may change in a future gcc version.
 *
 * NOTE: Because distributions shipped with a backported unit-at-a-time
 * compiler in gcc 3.3, we must define __used to be __attribute__((used))
 * for gcc >=3.3 instead of 3.4.
 *
 * In prior versions of gcc, such functions and data would be emitted, but
 * would be warned about except with attribute((unused)).
 *
 * Mark functions that are referenced only in inline assembly as __used so
 * the code is emitted even though it appears to be unreferenced.
 */
#if !defined(__used)

#endif
#if !defined(__maybe_unused)

#endif
#if !defined(__always_unused)

#endif
#if !defined(noinline)

#endif
/*
 * Rather then using noinline to prevent stack consumption, use
 * noinline_for_stack instead.  For documentaiton reasons.
 */


#if !defined(__always_inline)

#endif

/*
 * From the GCC manual:
 *
 * Many functions do not examine any values except their arguments,
 * and have no effects except the return value.  Basically this is
 * just slightly more strict class than the `pure' attribute above,
 * since function is not allowed to read global memory.
 *
 * Note that a function that has pointer arguments and examines the
 * data pointed to must _not_ be declared `const'.  Likewise, a
 * function that calls a non-`const' function usually must not be
 * `const'.  It does not make sense for a `const' function to return
 * `void'.
 */
#if !defined(__attribute_const__)

#endif
/*
 * Tell gcc if a function is cold. The compiler will assume any path
 * directly leading to the call is unlikely.
 */

#if !defined(__cold)

#endif
/* Simple shorthand for a section definition */
#if (!definedEx(__section) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H)))

#endif
/* Are two types/vars the same type (ignoring qualifiers)? */
#if (!definedEx(__same_type) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H)))

#endif
/* Compile time object size, -1 for unknown */
#if !defined(__compiletime_object_size)

#endif
#if !defined(__compiletime_warning)

#endif
#if !defined(__compiletime_error)

#endif
/*
 * Prevent the compiler from merging or refetching accesses.  The compiler
 * is also forbidden from reordering successive instances of ACCESS_ONCE(),
 * but only when the compiler is aware of some particular ordering.  One way
 * to make the compiler aware of ordering is to put the two invocations of
 * ACCESS_ONCE() in different C statements.
 *
 * This macro does absolutely -nothing- to prevent the CPU from reordering,
 * merging, or refetching absolutely anything at any time.  Its main intended
 * use is to mediate communication between process-level code and irq/NMI
 * handlers, all running on the same CPU.
 */


#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/linkage.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/linkage.h" 1
#if !definedEx(__ASM_LINKAGE_H)


#if !definedEx(__ASSEMBLY__)


#endif
#if definedEx(__ASSEMBLY__)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/asmmacro.h" 1
#if !definedEx(_ASM_IA64_ASMMACRO_H)


/*
 * Copyright (C) 2000-2001, 2003-2004 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */



















/*
 * Helper macros to make unwind directives more readable:
 */

/* prologue_gr: */






/*
 * Helper macros for accessing user memory.
 *
 * When adding any new .section/.previous entries here, make sure to
 * also add it to the DISCARD section in arch/ia64/kernel/gate.lds.S or
 * unpleasant things will happen.
 */

	.section "__ex_table", "a"		// declare section & section attributes
	.previous








/*
 * Tag MCA recoverable instruction ranges.
 */

	.section "__mca_table", "a"		// declare section & section attributes
	.previous





/*
 * Mark instructions that need a load of a virtual address patched to be
 * a load of a physical address.  We use this either in critical performance
 * path (ivt.S - TLB miss processing) or in places where it might not be
 * safe to use a "tpa" instruction (mca_asm.S - error recovery).
 */
	.section ".data.patch.vtop", "a"	// declare section & section attributes
	.previous





/*
 * For now, we always put in the McKinley E9 workaround.  On CPUs that don't need it,
 * we'll patch out the work-around bundles with NOPs, so their impact is minimal.
 */



	.section ".data.patch.mckinley_e9", "a"
	.previous
/* workaround for Itanium 2 Errata 9: */












 

/*
 * If physical stack register size is different from DEF_NUM_STACK_REG,
 * dynamically patch the kernel for correct size.
 */
	.section ".data.patch.phys_stack_reg", "a"
	.previous




/*
 * Up until early 2004, use of .align within a function caused bad unwind info.
 * TEXT_ALIGN(n) expands into ".align n" if a fixed GAS is available or into nothing
 * otherwise.
 */
#if definedEx(HAVE_WORKING_TEXT_ALIGN)

#endif
#if !definedEx(HAVE_WORKING_TEXT_ALIGN)

#endif
#if definedEx(HAVE_SERIALIZE_DIRECTIVE)


#endif
#if !definedEx(HAVE_SERIALIZE_DIRECTIVE)


#endif
#endif
#line 12 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/linkage.h" 2

#endif
#endif
#line 7 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/linkage.h" 2

#if definedEx(__cplusplus)

#endif
#if !definedEx(__cplusplus)

#endif
#if (!definedEx(asmlinkage) && (!definedEx(__KERNEL__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(__ASM_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)))

#endif
#if !definedEx(asmregparm)

#endif



/*
 * For assembly routines.
 *
 * Note when using these that you must specify the appropriate
 * alignment directives yourself
 */



/*
 * This is used by architectures to keep arguments on the stack
 * untouched by the compiler by keeping them live until the end.
 * The argument stack may be owned by the assembly-language
 * caller, not the callee, and gcc doesn't always understand
 * that.
 *
 * We have the return value, and a maximum of six arguments.
 *
 * This should always be followed by a "return ret" for the
 * protection to work (ie no more work that the compiler might
 * end up needing stack temporaries for).
 */
/* Assembly files may be compiled with -traditional .. */
#if !definedEx(__ASSEMBLY__)
#if !definedEx(asmlinkage_protect)

#endif
#endif
#if !definedEx(__ALIGN)


#endif
#if definedEx(__ASSEMBLY__)
#if !definedEx(LINKER_SCRIPT)



#if (!definedEx(ENTRY) && (!definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_ASMMACRO_H) || !definedEx(__KERNEL__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASM_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)))




#endif
#endif
#if !definedEx(WEAK)



#endif
#if (!definedEx(END) && (!definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_ASMMACRO_H) || !definedEx(__KERNEL__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASM_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)))


#endif
/* If symbol 'name' is treated as a subroutine (gets called, and returns)
 * then please use ENDPROC to mark 'name' as STT_FUNC for the benefit of
 * static analysis tools such as stack depth analyzer.
 */
#if !definedEx(ENDPROC)



#endif
#endif




#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 1
#if !defined(_LINUX_STDDEF_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1
#if (!definedEx(__LINUX_COMPILER_H) && definedEx(_LINUX_INIT_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)))


#if !definedEx(__ASSEMBLY__)
#if definedEx(__CHECKER__)












extern void __chk_user_ptr(const volatile void __attribute__((noderef, address_space(1))) *);
extern void __chk_io_ptr(const volatile void __attribute__((noderef, address_space(2))) *);
#endif
#if !definedEx(__CHECKER__)















#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 1



/*
 * Common definitions for all gcc versions go here.
 */


/* Optimization barrier */
/* The "volatile" is due to gcc bugs */


/*
 * This macro obfuscates arithmetic on a variable address so that gcc
 * shouldn't recognize the original var, and make assumptions about it.
 *
 * This is needed because the C standard makes it undefined to do
 * pointer arithmetic on "objects" outside their boundaries and the
 * gcc optimizers assume this is the case. In particular they
 * assume such arithmetic does not wrap.
 *
 * A miscompilation has been observed because of this on PPC.
 * To work around it we hide the relationship of the pointer and the object
 * using this macro.
 *
 * Versions of the ppc64 compiler before 4.1 had a bug where use of
 * RELOC_HIDE could trash r30. The bug can be worked around by changing
 * the inline assembly constraint from =g to =r, in this particular
 * case either is valid.
 */





/* &a[0] degrades to a pointer: a different type from an array */



/*
 * Force always-inline if the user requests it so via the .config,
 * or if gcc is too old:
 */
#if (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING))



#endif




/*
 * it doesn't make sense on ARM (currently the only user of __naked) to trace
 * naked functions because then mcount is called without stack and frame pointer
 * being set up and there is no chance to restore the lr register to the value
 * before mcount was called.
 */




/*
 * From the GCC manual:
 *
 * Many functions have no effects except the return value and their
 * return value depends only on the parameters and/or global
 * variables.  Such a function can be subject to common subexpression
 * elimination and loop optimization just as an arithmetic operator
 * would be.
 * [...]
 */











#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc4.h" 1



/* GCC 4.1.[01] miscompiles __weak */










/*
 * A trick to suppress uninitialized variable warning without generating any
 * code
 */



/* Mark functions as cold. gcc will assume any path leading to a call
   to them will be unlikely.  This means a lot of manual unlikely()s
   are unnecessary now for any paths leading to the usual suspects
   like BUG(), printk(), panic() etc. [but let's keep them for now for
   older compilers]

   Early snapshots of gcc 4.3 don't support this and we can't detect this
   in the preprocessor, but we can live with this because they're unreleased.
   Maketime probing would be overkill here.

   gcc also has a __attribute__((__hot__)) to move hot functions into
   a special section, but I don't see any sense in this right now in
   the kernel context */























#line 89 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 2
#line 44 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2



/* Intel compiler defines __GNUC__. So we will overwrite implementations
 * coming from above header files here
 */
#if definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 1



#if definedEx(__ECC)
/* Some compiler specific definitions are overwritten here
 * for Intel ECC compiler
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
#if !defined(_ASM_IA64_INTRINSICS_H)


/*
 * Compiler-dependent intrinsics.
 *
 * Copyright (C) 2002-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1
#if !defined(_LINUX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1
#if !defined(_ASM_IA64_TYPES_H)


/*
 * This file is never included by application software unless explicitly
 * requested (e.g., via linux/types.h) in which case the application is
 * Linux specific so (user-) name space pollution is not a major issue.
 * However, for interoperability, libraries still need to be careful to
 * avoid naming clashes.
 *
 * Based on <asm-alpha/types.h>.
 *
 * Modified 1998-2000, 2002
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 1
/*
 * asm-generic/int-ll64.h
 *
 * Integer declarations for architectures which use "long long"
 * for 64-bit types.
 */

#if !defined(_ASM_GENERIC_INT_LL64_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 1
#if !defined(__ASM_IA64_BITSPERLONG_H)




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitsperlong.h" 1
#if !defined(__ASM_GENERIC_BITS_PER_LONG)


/*
 * There seems to be no way of detecting this automatically from user
 * space, so 64 bit architectures should override this in their
 * bitsperlong.h. In particular, an architecture that supports
 * both 32 and 64 bit user space must not rely on CONFIG_64BIT
 * to decide it, but rather check a compiler provided macro.
 */




#if definedEx(CONFIG_64BIT)

#endif
#if !definedEx(CONFIG_64BIT)

#endif
/*
 * FIXME: The check currently breaks x86-64 build, so it's
 * temporarily disabled. Please fix x86-64 and reenable
 */




#endif
#line 8 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 2

#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 2


/*
 * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
 * header files exported to user space
 */

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
 





typedef signed char s8;
typedef unsigned char u8;

typedef signed short s16;
typedef unsigned short u16;

typedef signed int s32;
typedef unsigned int u32;

typedef signed long long s64;
typedef unsigned long long u64;










 










#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 2
 





 


typedef unsigned int umode_t;

/*
 * These aren't exported outside the kernel to avoid name space clashes
 */

struct fnptr {
	unsigned long ip;
	unsigned long gp;
};

/* DMA addresses are 64-bits wide, in general.  */
typedef u64 dma_addr_t;



#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2







#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 1
#if !defined(_LINUX_POSIX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 1








 



	
	





 



#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

/*
 * This allows for 1024 file descriptors: if NR_OPEN is ever grown
 * beyond that you'll have to change this too. But 1024 fd's seem to be
 * enough even for such "real" unices like OSF/1, so hopefully this is
 * one limit that doesn't have to be changed [again].
 *
 * Note that POSIX wants the FD_CLEAR(fd,fdsetp) defines to be in
 * <sys/time.h> (and thus <linux/time.h>) - but this is a more logical
 * place for them. Solved by having dummy defines in <sys/time.h>.
 */

/*
 * Those macros may have been defined in <gnu/types.h>. But we always
 * use the ones here. 
 */















typedef struct {
	unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;

/* Type of a signal handler.  */
typedef void (*__kernel_sighandler_t)(int);

/* Type of a SYSV IPC key.  */
typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/posix_types.h" 1
#if !defined(_ASM_IA64_POSIX_TYPES_H)


/*
 * This file is generally used by user-level software, so you need to
 * be a little careful about namespace pollution etc.  Also, we cannot
 * assume GCC is being used.
 *
 * Based on <asm-alpha/posix_types.h>.
 *
 * Modified 1998-2000, 2003
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */

typedef unsigned long	__kernel_ino_t;
typedef unsigned int	__kernel_mode_t;
typedef unsigned int	__kernel_nlink_t;
typedef long		__kernel_off_t;
typedef long long	__kernel_loff_t;
typedef int		__kernel_pid_t;
typedef int		__kernel_ipc_pid_t;
typedef unsigned int	__kernel_uid_t;
typedef unsigned int	__kernel_gid_t;
typedef unsigned long	__kernel_size_t;
typedef long		__kernel_ssize_t;
typedef long		__kernel_ptrdiff_t;
typedef long		__kernel_time_t;
typedef long		__kernel_suseconds_t;
typedef long		__kernel_clock_t;
typedef int		__kernel_timer_t;
typedef int		__kernel_clockid_t;
typedef int		__kernel_daddr_t;
typedef char *		__kernel_caddr_t;
typedef unsigned long	__kernel_sigset_t;	/* at least 32 bits */
typedef unsigned short	__kernel_uid16_t;
typedef unsigned short	__kernel_gid16_t;

typedef struct {
	int	val[2];
} __kernel_fsid_t;

typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_uid_t __kernel_uid32_t;
typedef __kernel_gid_t __kernel_gid32_t;

typedef unsigned int	__kernel_old_dev_t;









 /* With GNU C, use inline functions instead so args are evaluated only once: */


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_SET(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] |= (1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_CLR(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] &= ~(1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 int __FD_ISSET(unsigned long fd, const __kernel_fd_set *p)
{ 
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	return (p->fds_bits[_tmp] & (1UL<<_rem)) != 0;
}

/*
 * This will unroll the loop for the normal constant case (8 ints,
 * for a 256-bit fd_set)
 */

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_ZERO(__kernel_fd_set *p)
{
	unsigned long *tmp = p->fds_bits;
	int i;

	if (__builtin_constant_p((1024/(8 * sizeof(unsigned long))))) {
		switch ((1024/(8 * sizeof(unsigned long)))) {
		      case 16:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
			tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
			return;

		      case 8:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			return;

		      case 4:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			return;
		}
	}
	i = (1024/(8 * sizeof(unsigned long)));
	while (i) {
		i--;
		*tmp = 0;
		tmp++;
	}
}



#endif
#line 49 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

#endif
#line 16 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2


typedef __u32 __kernel_dev_t;

typedef __kernel_fd_set		fd_set;
typedef __kernel_dev_t		dev_t;
typedef __kernel_ino_t		ino_t;
typedef __kernel_mode_t		mode_t;
typedef __kernel_nlink_t	nlink_t;
typedef __kernel_off_t		off_t;
typedef __kernel_pid_t		pid_t;
typedef __kernel_daddr_t	daddr_t;
typedef __kernel_key_t		key_t;
typedef __kernel_suseconds_t	suseconds_t;
typedef __kernel_timer_t	timer_t;
typedef __kernel_clockid_t	clockid_t;
typedef __kernel_mqd_t		mqd_t;

typedef _Bool			bool;

typedef __kernel_uid32_t	uid_t;
typedef __kernel_gid32_t	gid_t;
typedef __kernel_uid16_t        uid16_t;
typedef __kernel_gid16_t        gid16_t;

typedef unsigned long		uintptr_t;

#if definedEx(CONFIG_UID16)
/* This is defined by include/asm-{arch}/posix_types.h */
typedef __kernel_old_uid_t	old_uid_t;
typedef __kernel_old_gid_t	old_gid_t;
#endif

typedef __kernel_loff_t		loff_t;

/*
 * The following typedefs are also protected by individual ifdefs for
 * historical reasons:
 */
#if !defined(_SIZE_T)

typedef __kernel_size_t		size_t;
#endif
#if !defined(_SSIZE_T)

typedef __kernel_ssize_t	ssize_t;
#endif
#if !defined(_PTRDIFF_T)

typedef __kernel_ptrdiff_t	ptrdiff_t;
#endif
#if !defined(_TIME_T)

typedef __kernel_time_t		time_t;
#endif
#if !defined(_CLOCK_T)

typedef __kernel_clock_t	clock_t;
#endif
#if !defined(_CADDR_T)

typedef __kernel_caddr_t	caddr_t;
#endif
/* bsd */
typedef unsigned char		u_char;
typedef unsigned short		u_short;
typedef unsigned int		u_int;
typedef unsigned long		u_long;

/* sysv */
typedef unsigned char		unchar;
typedef unsigned short		ushort;
typedef unsigned int		uint;
typedef unsigned long		ulong;

#if !defined(__BIT_TYPES_DEFINED__)


typedef		__u8		u_int8_t;
typedef		__s8		int8_t;
typedef		__u16		u_int16_t;
typedef		__s16		int16_t;
typedef		__u32		u_int32_t;
typedef		__s32		int32_t;

#endif
typedef		__u8		uint8_t;
typedef		__u16		uint16_t;
typedef		__u32		uint32_t;


typedef		__u64		uint64_t;
typedef		__u64		u_int64_t;
typedef		__s64		int64_t;

/* this is a special 64bit data type that is 8-byte aligned */




/**
 * The type used for indexing onto a disc or disc partition.
 *
 * Linux always considers sectors to be 512 bytes long independently
 * of the devices real block size.
 *
 * blkcnt_t is the type of the inode's block count.
 */
#if definedEx(CONFIG_LBDAF)
typedef u64 sector_t;
typedef u64 blkcnt_t;
#endif
#if !definedEx(CONFIG_LBDAF)
typedef unsigned long sector_t;
typedef unsigned long blkcnt_t;
#endif
/*
 * The type of an index into the pagecache.  Use a #define so asm/types.h
 * can override it.
 */
#if !defined(pgoff_t)

#endif

/*
 * Below are truly Linux-specific types that should never collide with
 * any application/library that wants linux/types.h.
 */

#if definedEx(__CHECKER__)

#endif
#if !definedEx(__CHECKER__)

#endif
#if definedEx(__CHECK_ENDIAN__)

#endif
#if !definedEx(__CHECK_ENDIAN__)

#endif
typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __le16;
typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __be16;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __le32;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __be32;
typedef __u64 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __le64;
typedef __u64 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __be64;

typedef __u16 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __sum16;
typedef __u32 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif

#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 __wsum;


typedef unsigned 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 gfp_t;
typedef unsigned 
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))
__attribute__((bitwise))
#endif
#if (((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))

#endif
 fmode_t;

#if definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u64 phys_addr_t;
#endif
#if !definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u32 phys_addr_t;
#endif
typedef phys_addr_t resource_size_t;

typedef struct {
	volatile int counter;
} atomic_t;

#if definedEx(CONFIG_64BIT)
typedef struct {
	volatile long counter;
} atomic64_t;
#endif
struct ustat {
	__kernel_daddr_t	f_tfree;
	__kernel_ino_t		f_tinode;
	char			f_fname[6];
	char			f_fpack[6];
};



#endif
#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
/* include compiler specific intrinsics */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/ia64regs.h" 1
/*
 * Copyright (C) 2002,2003 Intel Corp.
 *      Jun Nakajima <jun.nakajima@intel.com>
 *      Suresh Siddha <suresh.b.siddha@intel.com>
 */

#if !defined(_ASM_IA64_IA64REGS_H)


/*
 * Register Names for getreg() and setreg().
 *
 * The "magic" numbers happen to match the values used by the Intel compiler's
 * getreg()/setreg() intrinsics.
 */

/* Special Registers */





/* General Integer Registers */







/* Application Registers */





























/* Control Registers */




























/* Indirect Registers for getindreg() and setindreg() */









#endif
#line 17 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 1
#if !defined(_ASM_IA64_INTEL_INTRIN_H)

/*
 * Intel Compiler Intrinsics
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 * Copyright (C) 2005,2006 Hongjiu Lu <hongjiu.lu@intel.com>
 *
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/ia64/ia64intrin.h" 1
/* Overloaded builtins have been ported to C++: nothing is needed
   in the header anymore.  This file intentionally left void.  */
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 2




































































































/* FIXME: need st4.rel.nta intrinsic */






















/* Values for lfhint in __lfetch and __lfetch_fault */























#endif
#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
 












/*
 * Force an unresolved reference if someone tries to use
 * ia64_fetch_and_add() with a bad value.
 */
extern unsigned long __bad_size_for_ia64_fetch_and_add (void);
extern unsigned long __bad_increment_for_ia64_fetch_and_add (void);













































/*
 * This function doesn't exist, so you'll get a linker error if
 * something tries to do an invalid xchg().
 */
extern void ia64_xchg_called_with_bad_pointer (void);






























/*
 * Atomic compare and exchange.  Compare OLD with MEM, if identical,
 * store NEW in MEM.  Return the initial value in MEM.  Success is
 * indicated by comparing RETURN with OLD.
 */



/*
 * This function doesn't exist, so you'll get a linker error
 * if something tries to do an invalid cmpxchg().
 */
extern long ia64_cmpxchg_called_with_bad_pointer (void);









































/* for compatibility with other platforms: */






#if definedEx(CONFIG_IA64_DEBUG_CMPXCHG)











#endif
#if !definedEx(CONFIG_IA64_DEBUG_CMPXCHG)


#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(_ASM_IA64_PARAVIRT_PRIVOP_H)


#if definedEx(CONFIG_PARAVIRT)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 30 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/kregs.h" 1
#if !defined(_ASM_IA64_KREGS_H)


/*
 * Copyright (C) 2001-2002 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */
/*
 * This file defines the kernel register usage convention used by Linux/ia64.
 */

/*
 * Kernel registers:
 */












/*
 * Translation registers:
 */







/* Processor status register bits: */



















/* The following are not affected by save_flags()/restore_flags(): */














/* A mask of PSR bits that we generally don't want to inherit across a clone2() or an
   execve().  Only list flags here that need to be cleared/set for BOTH clone2() and
   execve().  */
























/* The following are not affected by save_flags()/restore_flags(): */













/* User mask bits: */


/* Default Control Register */






















/* Interrupt Status Register */

















/* ISR code field for non-access instructions */







#endif
#line 31 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/******************************************************************************
 * replacement of intrinsics operations.
 */

struct pv_cpu_ops {
	void (*fc)(void *addr);
	unsigned long (*thash)(unsigned long addr);
	unsigned long (*get_cpuid)(int index);
	unsigned long (*get_pmd)(int index);
	unsigned long (*getreg)(int reg);
	void (*setreg)(int reg, unsigned long val);
	void (*ptcga)(unsigned long addr, unsigned long size);
	unsigned long (*get_rr)(unsigned long index);
	void (*set_rr)(unsigned long index, unsigned long val);
	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,
			       unsigned long val2, unsigned long val3,
			       unsigned long val4);
	void (*ssm_i)(void);
	void (*rsm_i)(void);
	unsigned long (*get_psr_i)(void);
	void (*intrin_local_irq_restore)(unsigned long flags);
};

extern struct pv_cpu_ops pv_cpu_ops;

extern void ia64_native_setreg_func(int regnum, unsigned long val);
extern unsigned long ia64_native_getreg_func(int regnum);

/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/

#if !definedEx(ASM_SUPPORTED)



#endif
/* mask for ia64_native_ssm/rsm() must be constant.("i" constraing).
 * static inline function doesn't satisfy it. */
















/* returned ip value should be the one in the caller,
 * not in __paravirt_getreg() */










/******************************************************************************
 * replacement of hand written assembly codes.
 */
struct pv_cpu_asm_switch {
	unsigned long switch_to;
	unsigned long leave_syscall;
	unsigned long work_processed_syscall;
	unsigned long leave_kernel;
};
void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);




#endif
#if !definedEx(CONFIG_PARAVIRT)
/* fallback for native case */


#endif
#if (definedEx(CONFIG_PARAVIRT) && definedEx(ASM_SUPPORTED))

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(ASM_SUPPORTED))

#endif
/* these routines utilize privilege-sensitive or performance-sensitive
 * privileged instructions so the code must be replaced with
 * paravirtualized versions */







#if definedEx(CONFIG_PARAVIRT)
/******************************************************************************
 * binary patching infrastructure
 */













/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */



/*
 * struct task_struct* (*ia64_switch_to)(void* next_task);
 * void *ia64_leave_syscall;
 * void *ia64_work_processed_syscall
 * void *ia64_leave_kernel;
 */











#if definedEx(ASM_SUPPORTED)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(__ASM_PARAVIRT_PATCH_H)



	
	










 #line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stringify.h" 1
#if !defined(__LINUX_STRINGIFY_H)


/* Indirect stringification.  Doing two levels allows the parameter to be a
 * macro itself.  For example, compile with -DFOO=bar, __stringify(FOO)
 * converts to "bar".
 */




#endif
#line 42 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
















 











































































































































































 










 


 
































#line 43 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2

/* for binary patch */
struct paravirt_patch_site_bundle {
	void		*sbundle;
	void		*ebundle;
	unsigned long	type;
};

/* label means the beginning of new bundle */










struct paravirt_patch_bundle_elem {
	const void	*sbundle;
	const void	*ebundle;
	unsigned long	type;
};


struct paravirt_patch_site_inst {
	unsigned long	stag;
	unsigned long	etag;
	unsigned long	type;
};










struct paravirt_patch_site_branch {
	unsigned long	tag;
	unsigned long	type;
};

struct paravirt_patch_branch_target {
	const void	*entry;
	unsigned long	type;
};

void
__paravirt_patch_apply_branch(
	unsigned long tag, unsigned long type,
	const struct paravirt_patch_branch_target *entries,
	unsigned int nr_entries);

void
paravirt_patch_reloc_br(unsigned long tag, const void *target);

void
paravirt_patch_reloc_brl(unsigned long tag, const void *target);



unsigned long
ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);

unsigned long
__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,
			      const struct paravirt_patch_bundle_elem *elems,
			      unsigned long nelems,
			      const struct paravirt_patch_bundle_elem **found);

void
paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,
			    const struct paravirt_patch_site_bundle *end);

void
paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,
			  const struct paravirt_patch_site_inst *end);

void paravirt_patch_apply(void);
 




#endif
/*
 * Local variables:
 * mode: C
 * c-set-style: "linux"
 * c-basic-offset: 8
 * tab-width: 8
 * indent-tabs-mode: t
 * End:
 */
#line 178 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/*
 * pv_cpu_ops calling stub.
 * normal function call convension can't be written by gcc
 * inline assembly.
 *
 * from the caller's point of view,
 * the following registers will be clobbered.
 * r2, r3
 * r8-r15
 * r16, r17
 * b6, b7
 * p6-p15
 * ar.ccv
 *
 * from the callee's point of view ,
 * the following registers can be used.
 * r2, r3: scratch
 * r8: scratch, input argument0 and return value
 * r0-r15: scratch, input argument1-5
 * b6: return pointer
 * b7: scratch
 * p6-p15: scratch
 * ar.ccv: scratch
 *
 * other registers must not be changed. especially
 * b0: rp: preserved. gcc ignores b0 in clobbered register.
 * r16: saved gp
 */
/* 5 bundles */

































































































































































































static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_fc (void *arg1) { register void *__arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"1"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(1)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 1)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.fc), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); };
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 unsigned long paravirt_thash (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"2"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(2)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 2)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.thash), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 unsigned long paravirt_get_cpuid (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"3"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(3)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 3)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_cpuid), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 unsigned long paravirt_get_pmd (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"4"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(4)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 4)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_pmd), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_ptcga (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"5"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(5)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 5)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.ptcga), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 unsigned long paravirt_get_rr (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"6"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(6)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 6)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_rr), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_set_rr (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"7"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(7)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 7)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.set_rr), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_ssm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"9"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(9)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 9)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.ssm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_rsm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"10"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(10)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 10)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.rsm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 unsigned long paravirt_get_psr_i (void) { register unsigned long ia64_intri_res asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"11"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(11)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 11)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_psr_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void paravirt_intrin_local_irq_restore (unsigned long arg1) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"12"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(12)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 12)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.intrin_local_irq_restore), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
inline
#endif
 void
paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,
			unsigned long val2, unsigned long val3,
			unsigned long val4)
{
	register unsigned long __val0 asm ("r8") = val0;
	register unsigned long __val1 asm ("r9") = val1;
	register unsigned long __val2 asm ("r10") = val2;
	register unsigned long __val3 asm ("r11") = val3;
	register unsigned long __val4 asm ("r14") = val4;

	register unsigned long ia64_clobber0 asm ("r8");
	register unsigned long ia64_clobber1 asm ("r9");
	register unsigned long ia64_clobber2 asm ("r10");
	register unsigned long ia64_clobber3 asm ("r11");
	register unsigned long ia64_clobber4 asm ("r14");

	asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)))
"8"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__stringify(
 8)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n",
					  8)
#endif

		      : "=r"(ia64_clobber0),
			"=r"(ia64_clobber1),
			"=r"(ia64_clobber2),
			"=r"(ia64_clobber3),
			"=r"(ia64_clobber4)
		      : [op_addr] "i"(&pv_cpu_ops.set_rr0_to_rr4),
			"0"(__val0), "1"(__val1), "2"(__val2),
			"3"(__val3), "4"(__val4)
		      : "r2", "r3", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory");
}

/* unsigned long paravirt_getreg(int reg) */















/* void paravirt_setreg(int reg, unsigned long val) */

















#endif
#endif
#endif
#line 202 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2


#if (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__))
#if definedEx(ASM_SUPPORTED)

#endif
#if !definedEx(ASM_SUPPORTED)

#endif

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__))


#endif
/************************************************/
/* Instructions paravirtualized for correctness */
/************************************************/
/* fc, thash, get_cpuid, get_pmd, get_eflags, set_eflags */
/* Note that "ttag" and "cover" are also privilege-sensitive; "ttag"
 * is not currently used (though it may be in a long-format VHPT system!)
 */






/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/













#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 2

/* Intel ECC compiler doesn't support gcc specific asm stmts.
 * It uses intrinsics to do the equivalent things.
 */










/* Intel ECC compiler doesn't support __builtin_types_compatible_p() */


#endif

#line 53 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2
#endif
/*
 * Generic compiler-dependent macros required for kernel
 * build go below this comment. Actual compiler/compiler version
 * specific implementations come from the above header files
 */

struct ftrace_branch_data {
	const char *func;
	const char *file;
	unsigned line;
	union {
		struct {
			unsigned long correct;
			unsigned long incorrect;
		};
		struct {
			unsigned long miss;
			unsigned long hit;
		};
		unsigned long miss_hit[2];
	};
};

/*
 * Note: DISABLE_BRANCH_PROFILING can be used by special lowlevel code
 * to disable branch tracing on a per file basis.
 */
#if (definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(__CHECKER__))
void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect);



















/*
 * Using __builtin_constant_p(x) to ignore cases where the return
 * value is always the same.  This idea is taken from a similar patch
 * written by Daniel Walker.
 */
#if !defined(likely)

#endif
#if !defined(unlikely)

#endif
#if definedEx(CONFIG_PROFILE_ALL_BRANCHES)
/*
 * "Define 'is'", Bill Clinton
 * "Define 'if'", Steven Rostedt
 */

















#endif
#endif
#if (!definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__))


#endif
/* Optimization barrier */



/* Unreachable code */
#if !defined(unreachable)

#endif







#endif

/*
 * Allow us to mark functions as 'deprecated' and have gcc emit a nice
 * warning for each use, in hopes of speeding the functions removal.
 * Usage is:
 * 		int __deprecated foo(void)
 */
#if !defined(__deprecated)

#endif
#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif
#if !defined(__must_check)

#endif
#if !definedEx(CONFIG_ENABLE_MUST_CHECK)


#endif
#if !definedEx(CONFIG_ENABLE_WARN_DEPRECATED)




#endif
/*
 * Allow us to avoid 'defined but not used' warnings on functions and data,
 * as well as force them to be emitted to the assembly file.
 *
 * As of gcc 3.4, static functions that are not marked with attribute((used))
 * may be elided from the assembly file.  As of gcc 3.4, static data not so
 * marked will not be elided, but this may change in a future gcc version.
 *
 * NOTE: Because distributions shipped with a backported unit-at-a-time
 * compiler in gcc 3.3, we must define __used to be __attribute__((used))
 * for gcc >=3.3 instead of 3.4.
 *
 * In prior versions of gcc, such functions and data would be emitted, but
 * would be warned about except with attribute((unused)).
 *
 * Mark functions that are referenced only in inline assembly as __used so
 * the code is emitted even though it appears to be unreferenced.
 */
#if !defined(__used)

#endif
#if !defined(__maybe_unused)

#endif
#if !defined(__always_unused)

#endif
#if !defined(noinline)

#endif
/*
 * Rather then using noinline to prevent stack consumption, use
 * noinline_for_stack instead.  For documentaiton reasons.
 */


#if !defined(__always_inline)

#endif

/*
 * From the GCC manual:
 *
 * Many functions do not examine any values except their arguments,
 * and have no effects except the return value.  Basically this is
 * just slightly more strict class than the `pure' attribute above,
 * since function is not allowed to read global memory.
 *
 * Note that a function that has pointer arguments and examines the
 * data pointed to must _not_ be declared `const'.  Likewise, a
 * function that calls a non-`const' function usually must not be
 * `const'.  It does not make sense for a `const' function to return
 * `void'.
 */
#if !defined(__attribute_const__)

#endif
/*
 * Tell gcc if a function is cold. The compiler will assume any path
 * directly leading to the call is unlikely.
 */

#if !defined(__cold)

#endif
/* Simple shorthand for a section definition */
#if !defined(__section)

#endif
/* Are two types/vars the same type (ignoring qualifiers)? */
#if !defined(__same_type)

#endif
/* Compile time object size, -1 for unknown */
#if !defined(__compiletime_object_size)

#endif
#if !defined(__compiletime_warning)

#endif
#if !defined(__compiletime_error)

#endif
/*
 * Prevent the compiler from merging or refetching accesses.  The compiler
 * is also forbidden from reordering successive instances of ACCESS_ONCE(),
 * but only when the compiler is aware of some particular ordering.  One way
 * to make the compiler aware of ordering is to put the two invocations of
 * ACCESS_ONCE() in different C statements.
 *
 * This macro does absolutely -nothing- to prevent the CPU from reordering,
 * merging, or refetching absolutely anything at any time.  Its main intended
 * use is to mediate communication between process-level code and irq/NMI
 * handlers, all running on the same CPU.
 */


#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 2


#if definedEx(__cplusplus)

#endif
#if !definedEx(__cplusplus)

#endif

enum {
	false	= 0,
	true	= 1
};


#if defined(__compiler_offsetof)

#endif
#if !defined(__compiler_offsetof)

#endif

#endif
#line 14 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1
#if !defined(_LINUX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1
#if !defined(_ASM_IA64_TYPES_H)


/*
 * This file is never included by application software unless explicitly
 * requested (e.g., via linux/types.h) in which case the application is
 * Linux specific so (user-) name space pollution is not a major issue.
 * However, for interoperability, libraries still need to be careful to
 * avoid naming clashes.
 *
 * Based on <asm-alpha/types.h>.
 *
 * Modified 1998-2000, 2002
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 1
/*
 * asm-generic/int-ll64.h
 *
 * Integer declarations for architectures which use "long long"
 * for 64-bit types.
 */

#if !defined(_ASM_GENERIC_INT_LL64_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 1
#if !defined(__ASM_IA64_BITSPERLONG_H)




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitsperlong.h" 1
#if !defined(__ASM_GENERIC_BITS_PER_LONG)


/*
 * There seems to be no way of detecting this automatically from user
 * space, so 64 bit architectures should override this in their
 * bitsperlong.h. In particular, an architecture that supports
 * both 32 and 64 bit user space must not rely on CONFIG_64BIT
 * to decide it, but rather check a compiler provided macro.
 */




#if definedEx(CONFIG_64BIT)

#endif
#if !definedEx(CONFIG_64BIT)

#endif
/*
 * FIXME: The check currently breaks x86-64 build, so it's
 * temporarily disabled. Please fix x86-64 and reenable
 */




#endif
#line 8 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 2

#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 2

#if !definedEx(__ASSEMBLY__)
/*
 * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
 * header files exported to user space
 */

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
 


#endif

#if !definedEx(__ASSEMBLY__)
typedef signed char s8;
typedef unsigned char u8;

typedef signed short s16;
typedef unsigned short u16;

typedef signed int s32;
typedef unsigned int u32;

typedef signed long long s64;
typedef unsigned long long u64;










#endif
#if definedEx(__ASSEMBLY__)









#endif

#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 2
 

#if definedEx(__ASSEMBLY__)



#endif
#if !definedEx(__ASSEMBLY__)



typedef unsigned int umode_t;

/*
 * These aren't exported outside the kernel to avoid name space clashes
 */

struct fnptr {
	unsigned long ip;
	unsigned long gp;
};

/* DMA addresses are 64-bits wide, in general.  */
typedef u64 dma_addr_t;


#endif
#endif
#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2

#if !definedEx(__ASSEMBLY__)





#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 1
#if !defined(_LINUX_POSIX_TYPES_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stddef.h" 1








 



	
	





 



#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

/*
 * This allows for 1024 file descriptors: if NR_OPEN is ever grown
 * beyond that you'll have to change this too. But 1024 fd's seem to be
 * enough even for such "real" unices like OSF/1, so hopefully this is
 * one limit that doesn't have to be changed [again].
 *
 * Note that POSIX wants the FD_CLEAR(fd,fdsetp) defines to be in
 * <sys/time.h> (and thus <linux/time.h>) - but this is a more logical
 * place for them. Solved by having dummy defines in <sys/time.h>.
 */

/*
 * Those macros may have been defined in <gnu/types.h>. But we always
 * use the ones here. 
 */















typedef struct {
	unsigned long fds_bits [(1024/(8 * sizeof(unsigned long)))];
} __kernel_fd_set;

/* Type of a signal handler.  */
typedef void (*__kernel_sighandler_t)(int);

/* Type of a SYSV IPC key.  */
typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/posix_types.h" 1
#if !defined(_ASM_IA64_POSIX_TYPES_H)


/*
 * This file is generally used by user-level software, so you need to
 * be a little careful about namespace pollution etc.  Also, we cannot
 * assume GCC is being used.
 *
 * Based on <asm-alpha/posix_types.h>.
 *
 * Modified 1998-2000, 2003
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */

typedef unsigned long	__kernel_ino_t;
typedef unsigned int	__kernel_mode_t;
typedef unsigned int	__kernel_nlink_t;
typedef long		__kernel_off_t;
typedef long long	__kernel_loff_t;
typedef int		__kernel_pid_t;
typedef int		__kernel_ipc_pid_t;
typedef unsigned int	__kernel_uid_t;
typedef unsigned int	__kernel_gid_t;
typedef unsigned long	__kernel_size_t;
typedef long		__kernel_ssize_t;
typedef long		__kernel_ptrdiff_t;
typedef long		__kernel_time_t;
typedef long		__kernel_suseconds_t;
typedef long		__kernel_clock_t;
typedef int		__kernel_timer_t;
typedef int		__kernel_clockid_t;
typedef int		__kernel_daddr_t;
typedef char *		__kernel_caddr_t;
typedef unsigned long	__kernel_sigset_t;	/* at least 32 bits */
typedef unsigned short	__kernel_uid16_t;
typedef unsigned short	__kernel_gid16_t;

typedef struct {
	int	val[2];
} __kernel_fsid_t;

typedef __kernel_uid_t __kernel_old_uid_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_uid_t __kernel_uid32_t;
typedef __kernel_gid_t __kernel_gid32_t;

typedef unsigned int	__kernel_old_dev_t;









 /* With GNU C, use inline functions instead so args are evaluated only once: */


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_SET(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] |= (1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_CLR(unsigned long fd, __kernel_fd_set *fdsetp)
{
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	fdsetp->fds_bits[_tmp] &= ~(1UL<<_rem);
}


static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 int __FD_ISSET(unsigned long fd, const __kernel_fd_set *p)
{ 
	unsigned long _tmp = fd / (8 * sizeof(unsigned long));
	unsigned long _rem = fd % (8 * sizeof(unsigned long));
	return (p->fds_bits[_tmp] & (1UL<<_rem)) != 0;
}

/*
 * This will unroll the loop for the normal constant case (8 ints,
 * for a 256-bit fd_set)
 */

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
__inline__
#endif
 void __FD_ZERO(__kernel_fd_set *p)
{
	unsigned long *tmp = p->fds_bits;
	int i;

	
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((__builtin_constant_p((1024/(8 * sizeof(unsigned long))))))) ? !!((__builtin_constant_p((1024/(8 * sizeof(unsigned long)))))) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/posix_types.h", .line = 97, }; ______r = !!((__builtin_constant_p((1024/(8 * sizeof(unsigned long)))))); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))))
if (__builtin_constant_p((1024/(8 * sizeof(unsigned long)))))
#endif
 {
		switch ((1024/(8 * sizeof(unsigned long)))) {
		      case 16:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			tmp[ 8] = 0; tmp[ 9] = 0; tmp[10] = 0; tmp[11] = 0;
			tmp[12] = 0; tmp[13] = 0; tmp[14] = 0; tmp[15] = 0;
			return;

		      case 8:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			tmp[ 4] = 0; tmp[ 5] = 0; tmp[ 6] = 0; tmp[ 7] = 0;
			return;

		      case 4:
			tmp[ 0] = 0; tmp[ 1] = 0; tmp[ 2] = 0; tmp[ 3] = 0;
			return;
		}
	}
	i = (1024/(8 * sizeof(unsigned long)));
	while (i) {
		i--;
		*tmp = 0;
		tmp++;
	}
}



#endif
#line 49 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/posix_types.h" 2

#endif
#line 16 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 2


typedef __u32 __kernel_dev_t;

typedef __kernel_fd_set		fd_set;
typedef __kernel_dev_t		dev_t;
typedef __kernel_ino_t		ino_t;
typedef __kernel_mode_t		mode_t;
typedef __kernel_nlink_t	nlink_t;
typedef __kernel_off_t		off_t;
typedef __kernel_pid_t		pid_t;
typedef __kernel_daddr_t	daddr_t;
typedef __kernel_key_t		key_t;
typedef __kernel_suseconds_t	suseconds_t;
typedef __kernel_timer_t	timer_t;
typedef __kernel_clockid_t	clockid_t;
typedef __kernel_mqd_t		mqd_t;

typedef _Bool			bool;

typedef __kernel_uid32_t	uid_t;
typedef __kernel_gid32_t	gid_t;
typedef __kernel_uid16_t        uid16_t;
typedef __kernel_gid16_t        gid16_t;

typedef unsigned long		uintptr_t;

#if definedEx(CONFIG_UID16)
/* This is defined by include/asm-{arch}/posix_types.h */
typedef __kernel_old_uid_t	old_uid_t;
typedef __kernel_old_gid_t	old_gid_t;
#endif

typedef __kernel_loff_t		loff_t;

/*
 * The following typedefs are also protected by individual ifdefs for
 * historical reasons:
 */
#if !defined(_SIZE_T)

typedef __kernel_size_t		size_t;
#endif
#if !defined(_SSIZE_T)

typedef __kernel_ssize_t	ssize_t;
#endif
#if !defined(_PTRDIFF_T)

typedef __kernel_ptrdiff_t	ptrdiff_t;
#endif
#if !defined(_TIME_T)

typedef __kernel_time_t		time_t;
#endif
#if !defined(_CLOCK_T)

typedef __kernel_clock_t	clock_t;
#endif
#if !defined(_CADDR_T)

typedef __kernel_caddr_t	caddr_t;
#endif
/* bsd */
typedef unsigned char		u_char;
typedef unsigned short		u_short;
typedef unsigned int		u_int;
typedef unsigned long		u_long;

/* sysv */
typedef unsigned char		unchar;
typedef unsigned short		ushort;
typedef unsigned int		uint;
typedef unsigned long		ulong;

#if !defined(__BIT_TYPES_DEFINED__)


typedef		__u8		u_int8_t;
typedef		__s8		int8_t;
typedef		__u16		u_int16_t;
typedef		__s16		int16_t;
typedef		__u32		u_int32_t;
typedef		__s32		int32_t;

#endif
typedef		__u8		uint8_t;
typedef		__u16		uint16_t;
typedef		__u32		uint32_t;


typedef		__u64		uint64_t;
typedef		__u64		u_int64_t;
typedef		__s64		int64_t;

/* this is a special 64bit data type that is 8-byte aligned */




/**
 * The type used for indexing onto a disc or disc partition.
 *
 * Linux always considers sectors to be 512 bytes long independently
 * of the devices real block size.
 *
 * blkcnt_t is the type of the inode's block count.
 */
#if definedEx(CONFIG_LBDAF)
typedef u64 sector_t;
typedef u64 blkcnt_t;
#endif
#if !definedEx(CONFIG_LBDAF)
typedef unsigned long sector_t;
typedef unsigned long blkcnt_t;
#endif
/*
 * The type of an index into the pagecache.  Use a #define so asm/types.h
 * can override it.
 */
#if !defined(pgoff_t)

#endif

/*
 * Below are truly Linux-specific types that should never collide with
 * any application/library that wants linux/types.h.
 */

#if definedEx(__CHECKER__)

#endif
#if !definedEx(__CHECKER__)

#endif
#if definedEx(__CHECK_ENDIAN__)

#endif
#if !definedEx(__CHECK_ENDIAN__)

#endif
typedef __u16 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __le16;
typedef __u16 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __be16;
typedef __u32 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __le32;
typedef __u32 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __be32;
typedef __u64 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __le64;
typedef __u64 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __be64;

typedef __u16 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __sum16;
typedef __u32 
#if ((!definedEx(__KERNEL__) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__CHECK_ENDIAN__) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif

#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECK_ENDIAN__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__CHECK_ENDIAN__) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECK_ENDIAN__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECK_ENDIAN__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 __wsum;


typedef unsigned 
#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 gfp_t;
typedef unsigned 
#if ((!definedEx(__KERNEL__) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__CHECKER__) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))
__attribute__((bitwise))
#endif
#if (((!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && (((!definedEx(__KERNEL__) || !definedEx(__CHECKER__) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(__CHECKER__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!definedEx(__ASSEMBLY__) && !definedEx(__CHECKER__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H))))

#endif
 fmode_t;

#if definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u64 phys_addr_t;
#endif
#if !definedEx(CONFIG_PHYS_ADDR_T_64BIT)
typedef u32 phys_addr_t;
#endif
typedef phys_addr_t resource_size_t;

typedef struct {
	volatile int counter;
} atomic_t;

#if definedEx(CONFIG_64BIT)
typedef struct {
	volatile long counter;
} atomic64_t;
#endif
struct ustat {
	__kernel_daddr_t	f_tfree;
	__kernel_ino_t		f_tinode;
	char			f_fname[6];
	char			f_fpack[6];
};


#endif
#endif
#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1
#if !defined(__LINUX_COMPILER_H)


#if !definedEx(__ASSEMBLY__)
#if definedEx(__CHECKER__)












extern void __chk_user_ptr(const volatile void __attribute__((noderef, address_space(1))) *);
extern void __chk_io_ptr(const volatile void __attribute__((noderef, address_space(2))) *);
#endif
#if !definedEx(__CHECKER__)















#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 1



/*
 * Common definitions for all gcc versions go here.
 */


/* Optimization barrier */
/* The "volatile" is due to gcc bugs */


/*
 * This macro obfuscates arithmetic on a variable address so that gcc
 * shouldn't recognize the original var, and make assumptions about it.
 *
 * This is needed because the C standard makes it undefined to do
 * pointer arithmetic on "objects" outside their boundaries and the
 * gcc optimizers assume this is the case. In particular they
 * assume such arithmetic does not wrap.
 *
 * A miscompilation has been observed because of this on PPC.
 * To work around it we hide the relationship of the pointer and the object
 * using this macro.
 *
 * Versions of the ppc64 compiler before 4.1 had a bug where use of
 * RELOC_HIDE could trash r30. The bug can be worked around by changing
 * the inline assembly constraint from =g to =r, in this particular
 * case either is valid.
 */





/* &a[0] degrades to a pointer: a different type from an array */



/*
 * Force always-inline if the user requests it so via the .config,
 * or if gcc is too old:
 */
#if (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING))



#endif




/*
 * it doesn't make sense on ARM (currently the only user of __naked) to trace
 * naked functions because then mcount is called without stack and frame pointer
 * being set up and there is no chance to restore the lr register to the value
 * before mcount was called.
 */




/*
 * From the GCC manual:
 *
 * Many functions have no effects except the return value and their
 * return value depends only on the parameters and/or global
 * variables.  Such a function can be subject to common subexpression
 * elimination and loop optimization just as an arithmetic operator
 * would be.
 * [...]
 */











#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc4.h" 1



/* GCC 4.1.[01] miscompiles __weak */










/*
 * A trick to suppress uninitialized variable warning without generating any
 * code
 */



/* Mark functions as cold. gcc will assume any path leading to a call
   to them will be unlikely.  This means a lot of manual unlikely()s
   are unnecessary now for any paths leading to the usual suspects
   like BUG(), printk(), panic() etc. [but let's keep them for now for
   older compilers]

   Early snapshots of gcc 4.3 don't support this and we can't detect this
   in the preprocessor, but we can live with this because they're unreleased.
   Maketime probing would be overkill here.

   gcc also has a __attribute__((__hot__)) to move hot functions into
   a special section, but I don't see any sense in this right now in
   the kernel context */























#line 89 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-gcc.h" 2
#line 44 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2



/* Intel compiler defines __GNUC__. So we will overwrite implementations
 * coming from above header files here
 */
#if definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 1



#if definedEx(__ECC)
/* Some compiler specific definitions are overwritten here
 * for Intel ECC compiler
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
#if !defined(_ASM_IA64_INTRINSICS_H)


/*
 * Compiler-dependent intrinsics.
 *
 * Copyright (C) 2002-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
/* include compiler specific intrinsics */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/ia64regs.h" 1
/*
 * Copyright (C) 2002,2003 Intel Corp.
 *      Jun Nakajima <jun.nakajima@intel.com>
 *      Suresh Siddha <suresh.b.siddha@intel.com>
 */

#if !defined(_ASM_IA64_IA64REGS_H)


/*
 * Register Names for getreg() and setreg().
 *
 * The "magic" numbers happen to match the values used by the Intel compiler's
 * getreg()/setreg() intrinsics.
 */

/* Special Registers */





/* General Integer Registers */







/* Application Registers */





























/* Control Registers */




























/* Indirect Registers for getindreg() and setindreg() */









#endif
#line 17 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 1
#if !defined(_ASM_IA64_INTEL_INTRIN_H)

/*
 * Intel Compiler Intrinsics
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 * Copyright (C) 2005,2006 Hongjiu Lu <hongjiu.lu@intel.com>
 *
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/ia64/ia64intrin.h" 1
/* Overloaded builtins have been ported to C++: nothing is needed
   in the header anymore.  This file intentionally left void.  */
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 2




































































































/* FIXME: need st4.rel.nta intrinsic */






















/* Values for lfhint in __lfetch and __lfetch_fault */























#endif
#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
 












/*
 * Force an unresolved reference if someone tries to use
 * ia64_fetch_and_add() with a bad value.
 */
extern unsigned long __bad_size_for_ia64_fetch_and_add (void);
extern unsigned long __bad_increment_for_ia64_fetch_and_add (void);













































/*
 * This function doesn't exist, so you'll get a linker error if
 * something tries to do an invalid xchg().
 */
extern void ia64_xchg_called_with_bad_pointer (void);






























/*
 * Atomic compare and exchange.  Compare OLD with MEM, if identical,
 * store NEW in MEM.  Return the initial value in MEM.  Success is
 * indicated by comparing RETURN with OLD.
 */



/*
 * This function doesn't exist, so you'll get a linker error
 * if something tries to do an invalid cmpxchg().
 */
extern long ia64_cmpxchg_called_with_bad_pointer (void);









































/* for compatibility with other platforms: */






#if definedEx(CONFIG_IA64_DEBUG_CMPXCHG)











#endif
#if !definedEx(CONFIG_IA64_DEBUG_CMPXCHG)


#endif


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(_ASM_IA64_PARAVIRT_PRIVOP_H)


#if definedEx(CONFIG_PARAVIRT)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 30 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/kregs.h" 1
#if !defined(_ASM_IA64_KREGS_H)


/*
 * Copyright (C) 2001-2002 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */
/*
 * This file defines the kernel register usage convention used by Linux/ia64.
 */

/*
 * Kernel registers:
 */












/*
 * Translation registers:
 */







/* Processor status register bits: */



















/* The following are not affected by save_flags()/restore_flags(): */














/* A mask of PSR bits that we generally don't want to inherit across a clone2() or an
   execve().  Only list flags here that need to be cleared/set for BOTH clone2() and
   execve().  */
























/* The following are not affected by save_flags()/restore_flags(): */













/* User mask bits: */


/* Default Control Register */






















/* Interrupt Status Register */

















/* ISR code field for non-access instructions */







#endif
#line 31 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/******************************************************************************
 * replacement of intrinsics operations.
 */

struct pv_cpu_ops {
	void (*fc)(void *addr);
	unsigned long (*thash)(unsigned long addr);
	unsigned long (*get_cpuid)(int index);
	unsigned long (*get_pmd)(int index);
	unsigned long (*getreg)(int reg);
	void (*setreg)(int reg, unsigned long val);
	void (*ptcga)(unsigned long addr, unsigned long size);
	unsigned long (*get_rr)(unsigned long index);
	void (*set_rr)(unsigned long index, unsigned long val);
	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,
			       unsigned long val2, unsigned long val3,
			       unsigned long val4);
	void (*ssm_i)(void);
	void (*rsm_i)(void);
	unsigned long (*get_psr_i)(void);
	void (*intrin_local_irq_restore)(unsigned long flags);
};

extern struct pv_cpu_ops pv_cpu_ops;

extern void ia64_native_setreg_func(int regnum, unsigned long val);
extern unsigned long ia64_native_getreg_func(int regnum);

/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/

#if !definedEx(ASM_SUPPORTED)



#endif
/* mask for ia64_native_ssm/rsm() must be constant.("i" constraing).
 * static inline function doesn't satisfy it. */
















/* returned ip value should be the one in the caller,
 * not in __paravirt_getreg() */










/******************************************************************************
 * replacement of hand written assembly codes.
 */
struct pv_cpu_asm_switch {
	unsigned long switch_to;
	unsigned long leave_syscall;
	unsigned long work_processed_syscall;
	unsigned long leave_kernel;
};
void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);




#endif
#if !definedEx(CONFIG_PARAVIRT)
/* fallback for native case */


#endif
#if (definedEx(CONFIG_PARAVIRT) && definedEx(ASM_SUPPORTED))

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(ASM_SUPPORTED))

#endif
/* these routines utilize privilege-sensitive or performance-sensitive
 * privileged instructions so the code must be replaced with
 * paravirtualized versions */







#if definedEx(CONFIG_PARAVIRT)
/******************************************************************************
 * binary patching infrastructure
 */













/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */



/*
 * struct task_struct* (*ia64_switch_to)(void* next_task);
 * void *ia64_leave_syscall;
 * void *ia64_work_processed_syscall
 * void *ia64_leave_kernel;
 */











#if definedEx(ASM_SUPPORTED)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(__ASM_PARAVIRT_PATCH_H)



	
	










 #line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stringify.h" 1
#if !defined(__LINUX_STRINGIFY_H)


/* Indirect stringification.  Doing two levels allows the parameter to be a
 * macro itself.  For example, compile with -DFOO=bar, __stringify(FOO)
 * converts to "bar".
 */




#endif
#line 42 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
















 











































































































































































 










 


 
































#line 43 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2

/* for binary patch */
struct paravirt_patch_site_bundle {
	void		*sbundle;
	void		*ebundle;
	unsigned long	type;
};

/* label means the beginning of new bundle */










struct paravirt_patch_bundle_elem {
	const void	*sbundle;
	const void	*ebundle;
	unsigned long	type;
};


struct paravirt_patch_site_inst {
	unsigned long	stag;
	unsigned long	etag;
	unsigned long	type;
};










struct paravirt_patch_site_branch {
	unsigned long	tag;
	unsigned long	type;
};

struct paravirt_patch_branch_target {
	const void	*entry;
	unsigned long	type;
};

void
__paravirt_patch_apply_branch(
	unsigned long tag, unsigned long type,
	const struct paravirt_patch_branch_target *entries,
	unsigned int nr_entries);

void
paravirt_patch_reloc_br(unsigned long tag, const void *target);

void
paravirt_patch_reloc_brl(unsigned long tag, const void *target);



unsigned long
ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);

unsigned long
__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,
			      const struct paravirt_patch_bundle_elem *elems,
			      unsigned long nelems,
			      const struct paravirt_patch_bundle_elem **found);

void
paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,
			    const struct paravirt_patch_site_bundle *end);

void
paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,
			  const struct paravirt_patch_site_inst *end);

void paravirt_patch_apply(void);
 




#endif
/*
 * Local variables:
 * mode: C
 * c-set-style: "linux"
 * c-basic-offset: 8
 * tab-width: 8
 * indent-tabs-mode: t
 * End:
 */
#line 178 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/*
 * pv_cpu_ops calling stub.
 * normal function call convension can't be written by gcc
 * inline assembly.
 *
 * from the caller's point of view,
 * the following registers will be clobbered.
 * r2, r3
 * r8-r15
 * r16, r17
 * b6, b7
 * p6-p15
 * ar.ccv
 *
 * from the callee's point of view ,
 * the following registers can be used.
 * r2, r3: scratch
 * r8: scratch, input argument0 and return value
 * r0-r15: scratch, input argument1-5
 * b6: return pointer
 * b7: scratch
 * p6-p15: scratch
 * ar.ccv: scratch
 *
 * other registers must not be changed. especially
 * b0: rp: preserved. gcc ignores b0 in clobbered register.
 * r16: saved gp
 */
/* 5 bundles */

































































































































































































static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_fc (void *arg1) { register void *__arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"1"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(1)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 1)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.fc), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); };
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_thash (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"2"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(2)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 2)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.thash), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_cpuid (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"3"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(3)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 3)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_cpuid), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_pmd (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"4"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(4)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 4)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_pmd), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_ptcga (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"5"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(5)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 5)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.ptcga), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_rr (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"6"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(6)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 6)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_rr), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_set_rr (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"7"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(7)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 7)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.set_rr), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_ssm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"9"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(9)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 9)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.ssm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_rsm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"10"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(10)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 10)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.rsm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_psr_i (void) { register unsigned long ia64_intri_res asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"11"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(11)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 11)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_psr_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_intrin_local_irq_restore (unsigned long arg1) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"12"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(12)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 12)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.intrin_local_irq_restore), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void
paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,
			unsigned long val2, unsigned long val3,
			unsigned long val4)
{
	register unsigned long __val0 asm ("r8") = val0;
	register unsigned long __val1 asm ("r9") = val1;
	register unsigned long __val2 asm ("r10") = val2;
	register unsigned long __val3 asm ("r11") = val3;
	register unsigned long __val4 asm ("r14") = val4;

	register unsigned long ia64_clobber0 asm ("r8");
	register unsigned long ia64_clobber1 asm ("r9");
	register unsigned long ia64_clobber2 asm ("r10");
	register unsigned long ia64_clobber3 asm ("r11");
	register unsigned long ia64_clobber4 asm ("r14");

	asm volatile (
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)))
"8"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
__stringify(
 8)
#endif
 "\n"
#endif
#if ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n",
					  8)
#endif

		      : "=r"(ia64_clobber0),
			"=r"(ia64_clobber1),
			"=r"(ia64_clobber2),
			"=r"(ia64_clobber3),
			"=r"(ia64_clobber4)
		      : [op_addr] "i"(&pv_cpu_ops.set_rr0_to_rr4),
			"0"(__val0), "1"(__val1), "2"(__val2),
			"3"(__val3), "4"(__val4)
		      : "r2", "r3", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory");
}

/* unsigned long paravirt_getreg(int reg) */















/* void paravirt_setreg(int reg, unsigned long val) */

















#endif
#endif
#endif
#line 202 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2


#if (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__))
#if definedEx(ASM_SUPPORTED)

#endif
#if !definedEx(ASM_SUPPORTED)

#endif

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__))


#endif
/************************************************/
/* Instructions paravirtualized for correctness */
/************************************************/
/* fc, thash, get_cpuid, get_pmd, get_eflags, set_eflags */
/* Note that "ttag" and "cover" are also privilege-sensitive; "ttag"
 * is not currently used (though it may be in a long-format VHPT system!)
 */






/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/













#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler-intel.h" 2

/* Intel ECC compiler doesn't support gcc specific asm stmts.
 * It uses intrinsics to do the equivalent things.
 */










/* Intel ECC compiler doesn't support __builtin_types_compatible_p() */


#endif

#line 53 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 2
#endif
/*
 * Generic compiler-dependent macros required for kernel
 * build go below this comment. Actual compiler/compiler version
 * specific implementations come from the above header files
 */

struct ftrace_branch_data {
	const char *func;
	const char *file;
	unsigned line;
	union {
		struct {
			unsigned long correct;
			unsigned long incorrect;
		};
		struct {
			unsigned long miss;
			unsigned long hit;
		};
		unsigned long miss_hit[2];
	};
};

/*
 * Note: DISABLE_BRANCH_PROFILING can be used by special lowlevel code
 * to disable branch tracing on a per file basis.
 */
#if (definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(__CHECKER__))
void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect);



















/*
 * Using __builtin_constant_p(x) to ignore cases where the return
 * value is always the same.  This idea is taken from a similar patch
 * written by Daniel Walker.
 */
#if !defined(likely)

#endif
#if !defined(unlikely)

#endif
#if definedEx(CONFIG_PROFILE_ALL_BRANCHES)
/*
 * "Define 'is'", Bill Clinton
 * "Define 'if'", Steven Rostedt
 */

















#endif
#endif
#if (!definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__))


#endif
/* Optimization barrier */



/* Unreachable code */
#if !defined(unreachable)

#endif







#endif

/*
 * Allow us to mark functions as 'deprecated' and have gcc emit a nice
 * warning for each use, in hopes of speeding the functions removal.
 * Usage is:
 * 		int __deprecated foo(void)
 */
#if !defined(__deprecated)

#endif
#if definedEx(MODULE)

#endif
#if !definedEx(MODULE)

#endif
#if !defined(__must_check)

#endif
#if !definedEx(CONFIG_ENABLE_MUST_CHECK)


#endif
#if !definedEx(CONFIG_ENABLE_WARN_DEPRECATED)




#endif
/*
 * Allow us to avoid 'defined but not used' warnings on functions and data,
 * as well as force them to be emitted to the assembly file.
 *
 * As of gcc 3.4, static functions that are not marked with attribute((used))
 * may be elided from the assembly file.  As of gcc 3.4, static data not so
 * marked will not be elided, but this may change in a future gcc version.
 *
 * NOTE: Because distributions shipped with a backported unit-at-a-time
 * compiler in gcc 3.3, we must define __used to be __attribute__((used))
 * for gcc >=3.3 instead of 3.4.
 *
 * In prior versions of gcc, such functions and data would be emitted, but
 * would be warned about except with attribute((unused)).
 *
 * Mark functions that are referenced only in inline assembly as __used so
 * the code is emitted even though it appears to be unreferenced.
 */
#if !defined(__used)

#endif
#if !defined(__maybe_unused)

#endif
#if !defined(__always_unused)

#endif
#if !defined(noinline)

#endif
/*
 * Rather then using noinline to prevent stack consumption, use
 * noinline_for_stack instead.  For documentaiton reasons.
 */


#if !defined(__always_inline)

#endif

/*
 * From the GCC manual:
 *
 * Many functions do not examine any values except their arguments,
 * and have no effects except the return value.  Basically this is
 * just slightly more strict class than the `pure' attribute above,
 * since function is not allowed to read global memory.
 *
 * Note that a function that has pointer arguments and examines the
 * data pointed to must _not_ be declared `const'.  Likewise, a
 * function that calls a non-`const' function usually must not be
 * `const'.  It does not make sense for a `const' function to return
 * `void'.
 */
#if !defined(__attribute_const__)

#endif
/*
 * Tell gcc if a function is cold. The compiler will assume any path
 * directly leading to the call is unlikely.
 */

#if !defined(__cold)

#endif
/* Simple shorthand for a section definition */
#if !defined(__section)

#endif
/* Are two types/vars the same type (ignoring qualifiers)? */
#if !defined(__same_type)

#endif
/* Compile time object size, -1 for unknown */
#if !defined(__compiletime_object_size)

#endif
#if !defined(__compiletime_warning)

#endif
#if !defined(__compiletime_error)

#endif
/*
 * Prevent the compiler from merging or refetching accesses.  The compiler
 * is also forbidden from reordering successive instances of ACCESS_ONCE(),
 * but only when the compiler is aware of some particular ordering.  One way
 * to make the compiler aware of ordering is to put the two invocations of
 * ACCESS_ONCE() in different C statements.
 *
 * This macro does absolutely -nothing- to prevent the CPU from reordering,
 * merging, or refetching absolutely anything at any time.  Its main intended
 * use is to mediate communication between process-level code and irq/NMI
 * handlers, all running on the same CPU.
 */


#endif
#line 16 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/kernel.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/bitops.h" 1
#if !definedEx(_LINUX_BITOPS_H)

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1
#if !defined(_ASM_IA64_TYPES_H)


/*
 * This file is never included by application software unless explicitly
 * requested (e.g., via linux/types.h) in which case the application is
 * Linux specific so (user-) name space pollution is not a major issue.
 * However, for interoperability, libraries still need to be careful to
 * avoid naming clashes.
 *
 * Based on <asm-alpha/types.h>.
 *
 * Modified 1998-2000, 2002
 *	David Mosberger-Tang <davidm@hpl.hp.com>, Hewlett-Packard Co
 */


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 1
/*
 * asm-generic/int-ll64.h
 *
 * Integer declarations for architectures which use "long long"
 * for 64-bit types.
 */

#if !defined(_ASM_GENERIC_INT_LL64_H)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 1
#if !defined(__ASM_IA64_BITSPERLONG_H)




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitsperlong.h" 1
#if !defined(__ASM_GENERIC_BITS_PER_LONG)


/*
 * There seems to be no way of detecting this automatically from user
 * space, so 64 bit architectures should override this in their
 * bitsperlong.h. In particular, an architecture that supports
 * both 32 and 64 bit user space must not rely on CONFIG_64BIT
 * to decide it, but rather check a compiler provided macro.
 */




#if definedEx(CONFIG_64BIT)

#endif
#if !definedEx(CONFIG_64BIT)

#endif
/*
 * FIXME: The check currently breaks x86-64 build, so it's
 * temporarily disabled. Please fix x86-64 and reenable
 */




#endif
#line 8 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitsperlong.h" 2

#endif
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/int-ll64.h" 2

#if !definedEx(__ASSEMBLY__)
/*
 * __xx is ok: it doesn't pollute the POSIX namespace. Use these in the
 * header files exported to user space
 */

typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
 


#endif

#if !definedEx(__ASSEMBLY__)
typedef signed char s8;
typedef unsigned char u8;

typedef signed short s16;
typedef unsigned short u16;

typedef signed int s32;
typedef unsigned int u32;

typedef signed long long s64;
typedef unsigned long long u64;










#endif
#if definedEx(__ASSEMBLY__)









#endif

#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 2
 

#if definedEx(__ASSEMBLY__)



#endif
#if !definedEx(__ASSEMBLY__)



typedef unsigned int umode_t;

/*
 * These aren't exported outside the kernel to avoid name space clashes
 */

struct fnptr {
	unsigned long ip;
	unsigned long gp;
};

/* DMA addresses are 64-bits wide, in general.  */
typedef u64 dma_addr_t;


#endif
#endif
#line 5 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/bitops.h" 2








/*
 * Include this here because some architectures need generic_ffs/fls in
 * scope
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h" 1
#if !definedEx(_ASM_IA64_BITOPS_H)


/*
 * Copyright (C) 1998-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 *
 * 02/06/02 find_next_bit() and find_first_bit() added from Erich Focht's ia64
 * O(1) scheduler patch
 */




#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1



















 


































	
	
	
	
		
			
			
		
		
			
			
		
		
	





























































 






























 
















































































































#line 18 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
#if !defined(_ASM_IA64_INTRINSICS_H)


/*
 * Compiler-dependent intrinsics.
 *
 * Copyright (C) 2002-2003 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */

#if !definedEx(__ASSEMBLY__)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 15 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
/* include compiler specific intrinsics */
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/ia64regs.h" 1
/*
 * Copyright (C) 2002,2003 Intel Corp.
 *      Jun Nakajima <jun.nakajima@intel.com>
 *      Suresh Siddha <suresh.b.siddha@intel.com>
 */

#if !defined(_ASM_IA64_IA64REGS_H)


/*
 * Register Names for getreg() and setreg().
 *
 * The "magic" numbers happen to match the values used by the Intel compiler's
 * getreg()/setreg() intrinsics.
 */

/* Special Registers */





/* General Integer Registers */







/* Application Registers */





























/* Control Registers */




























/* Indirect Registers for getindreg() and setindreg() */









#endif
#line 17 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
#if definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 1
#if !defined(_ASM_IA64_INTEL_INTRIN_H)

/*
 * Intel Compiler Intrinsics
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 * Copyright (C) 2005,2006 Hongjiu Lu <hongjiu.lu@intel.com>
 *
 */
#line 1 "/Users/Flavio/Desktop/Project/Linux/systems/redhat/usr/lib/gcc/ia64/ia64intrin.h" 1
/* Overloaded builtins have been ported to C++: nothing is needed
   in the header anymore.  This file intentionally left void.  */
#line 13 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intel_intrin.h" 2




































































































/* FIXME: need st4.rel.nta intrinsic */






















/* Values for lfhint in __lfetch and __lfetch_fault */























#endif
#line 19 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
#endif
#if !definedEx(__INTEL_COMPILER)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/gcc_intrin.h" 1
#if !definedEx(_ASM_IA64_GCC_INTRIN_H)

/*
 *
 * Copyright (C) 2002,2003 Jun Nakajima <jun.nakajima@intel.com>
 * Copyright (C) 2002,2003 Suresh Siddha <suresh.b.siddha@intel.com>
 */

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 11 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/gcc_intrin.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/compiler.h" 1



















 


































	
	
	
	
		
			
			
		
		
			
			
		
		
	





























































 






























 
















































































































#line 12 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/gcc_intrin.h" 2

/* define this macro to get some asm stmts included in 'c' files */


/* Optimization barrier */
/* The "volatile" is due to gcc bugs */












extern void ia64_bad_param_for_setreg (void);
extern void ia64_bad_param_for_getreg (void);


register unsigned long ia64_r13 asm ("r13") 
#if ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || defined(__used)) && (((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__used) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || defined(__used) || definedEx(_LINUX_KERNEL_H)) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (definedEx(_LINUX_INIT_H) || definedEx(__used) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__))) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))) || (definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__))))
__attribute__((__used__))
#endif
#if ((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__used)) || ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__used) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && !defined(__used)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__used) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || definedEx(__ASSEMBLY__))))))))
__used
#endif
;













































































/* Integer values for mux1 instruction */
































 



























































































































































































































































#if definedEx(HAVE_SERIALIZE_DIRECTIVE)


#endif
#if !definedEx(HAVE_SERIALIZE_DIRECTIVE)


#endif






























































































































/* Values for lfhint in ia64_lfetch and ia64_lfetch_fault */























































































#endif
#line 21 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2
#endif











/*
 * Force an unresolved reference if someone tries to use
 * ia64_fetch_and_add() with a bad value.
 */
extern unsigned long __bad_size_for_ia64_fetch_and_add (void);
extern unsigned long __bad_increment_for_ia64_fetch_and_add (void);













































/*
 * This function doesn't exist, so you'll get a linker error if
 * something tries to do an invalid xchg().
 */
extern void ia64_xchg_called_with_bad_pointer (void);






























/*
 * Atomic compare and exchange.  Compare OLD with MEM, if identical,
 * store NEW in MEM.  Return the initial value in MEM.  Success is
 * indicated by comparing RETURN with OLD.
 */



/*
 * This function doesn't exist, so you'll get a linker error
 * if something tries to do an invalid cmpxchg().
 */
extern long ia64_cmpxchg_called_with_bad_pointer (void);









































/* for compatibility with other platforms: */






#if definedEx(CONFIG_IA64_DEBUG_CMPXCHG)











#endif
#if !definedEx(CONFIG_IA64_DEBUG_CMPXCHG)


#endif
#endif

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(_ASM_IA64_PARAVIRT_PRIVOP_H)


#if definedEx(CONFIG_PARAVIRT)
#if !definedEx(__ASSEMBLY__)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/types.h" 1



























































































































 

















 



 

















 




	




	



	
	
	
	





#line 30 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/kregs.h" 1
#if !defined(_ASM_IA64_KREGS_H)


/*
 * Copyright (C) 2001-2002 Hewlett-Packard Co
 *	David Mosberger-Tang <davidm@hpl.hp.com>
 */
/*
 * This file defines the kernel register usage convention used by Linux/ia64.
 */

/*
 * Kernel registers:
 */












/*
 * Translation registers:
 */







/* Processor status register bits: */



















/* The following are not affected by save_flags()/restore_flags(): */














/* A mask of PSR bits that we generally don't want to inherit across a clone2() or an
   execve().  Only list flags here that need to be cleared/set for BOTH clone2() and
   execve().  */
























/* The following are not affected by save_flags()/restore_flags(): */













/* User mask bits: */


/* Default Control Register */






















/* Interrupt Status Register */

















/* ISR code field for non-access instructions */







#endif
#line 31 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/******************************************************************************
 * replacement of intrinsics operations.
 */

struct pv_cpu_ops {
	void (*fc)(void *addr);
	unsigned long (*thash)(unsigned long addr);
	unsigned long (*get_cpuid)(int index);
	unsigned long (*get_pmd)(int index);
	unsigned long (*getreg)(int reg);
	void (*setreg)(int reg, unsigned long val);
	void (*ptcga)(unsigned long addr, unsigned long size);
	unsigned long (*get_rr)(unsigned long index);
	void (*set_rr)(unsigned long index, unsigned long val);
	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,
			       unsigned long val2, unsigned long val3,
			       unsigned long val4);
	void (*ssm_i)(void);
	void (*rsm_i)(void);
	unsigned long (*get_psr_i)(void);
	void (*intrin_local_irq_restore)(unsigned long flags);
};

extern struct pv_cpu_ops pv_cpu_ops;

extern void ia64_native_setreg_func(int regnum, unsigned long val);
extern unsigned long ia64_native_getreg_func(int regnum);

/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/

#if (!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)))



#endif
/* mask for ia64_native_ssm/rsm() must be constant.("i" constraing).
 * static inline function doesn't satisfy it. */
















/* returned ip value should be the one in the caller,
 * not in __paravirt_getreg() */










/******************************************************************************
 * replacement of hand written assembly codes.
 */
struct pv_cpu_asm_switch {
	unsigned long switch_to;
	unsigned long leave_syscall;
	unsigned long work_processed_syscall;
	unsigned long leave_kernel;
};
void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);

#endif


#endif
#if !definedEx(CONFIG_PARAVIRT)
/* fallback for native case */


#endif
#if (definedEx(CONFIG_PARAVIRT) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))

#endif
#if (!definedEx(CONFIG_PARAVIRT) || (!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))))

#endif
/* these routines utilize privilege-sensitive or performance-sensitive
 * privileged instructions so the code must be replaced with
 * paravirtualized versions */







#if definedEx(CONFIG_PARAVIRT)
/******************************************************************************
 * binary patching infrastructure
 */













/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */



/*
 * struct task_struct* (*ia64_switch_to)(void* next_task);
 * void *ia64_leave_syscall;
 * void *ia64_work_processed_syscall
 * void *ia64_leave_kernel;
 */











#if (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)))
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 1
/******************************************************************************
 * Copyright (c) 2008 Isaku Yamahata <yamahata at valinux co jp>
 *                    VA Linux Systems Japan K.K.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#if !defined(__ASM_PARAVIRT_PATCH_H)


#if definedEx(__ASSEMBLY__)
	.section .paravirt_branches, "a"
	.previous










#endif
#if !definedEx(__ASSEMBLY__)
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/linux/stringify.h" 1
#if !defined(__LINUX_STRINGIFY_H)


/* Indirect stringification.  Doing two levels allows the parameter to be a
 * macro itself.  For example, compile with -DFOO=bar, __stringify(FOO)
 * converts to "bar".
 */




#endif
#line 42 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2
#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 1
















 











































































































































































 










 


 
































#line 43 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_patch.h" 2

/* for binary patch */
struct paravirt_patch_site_bundle {
	void		*sbundle;
	void		*ebundle;
	unsigned long	type;
};

/* label means the beginning of new bundle */










struct paravirt_patch_bundle_elem {
	const void	*sbundle;
	const void	*ebundle;
	unsigned long	type;
};


struct paravirt_patch_site_inst {
	unsigned long	stag;
	unsigned long	etag;
	unsigned long	type;
};










struct paravirt_patch_site_branch {
	unsigned long	tag;
	unsigned long	type;
};

struct paravirt_patch_branch_target {
	const void	*entry;
	unsigned long	type;
};

void
__paravirt_patch_apply_branch(
	unsigned long tag, unsigned long type,
	const struct paravirt_patch_branch_target *entries,
	unsigned int nr_entries);

void
paravirt_patch_reloc_br(unsigned long tag, const void *target);

void
paravirt_patch_reloc_brl(unsigned long tag, const void *target);



unsigned long
ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);

unsigned long
__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,
			      const struct paravirt_patch_bundle_elem *elems,
			      unsigned long nelems,
			      const struct paravirt_patch_bundle_elem **found);

void
paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,
			    const struct paravirt_patch_site_bundle *end);

void
paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,
			  const struct paravirt_patch_site_inst *end);

void paravirt_patch_apply(void);
 



#endif
#endif
/*
 * Local variables:
 * mode: C
 * c-set-style: "linux"
 * c-basic-offset: 8
 * tab-width: 8
 * indent-tabs-mode: t
 * End:
 */
#line 178 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/paravirt_privop.h" 2

/*
 * pv_cpu_ops calling stub.
 * normal function call convension can't be written by gcc
 * inline assembly.
 *
 * from the caller's point of view,
 * the following registers will be clobbered.
 * r2, r3
 * r8-r15
 * r16, r17
 * b6, b7
 * p6-p15
 * ar.ccv
 *
 * from the callee's point of view ,
 * the following registers can be used.
 * r2, r3: scratch
 * r8: scratch, input argument0 and return value
 * r0-r15: scratch, input argument1-5
 * b6: return pointer
 * b7: scratch
 * p6-p15: scratch
 * ar.ccv: scratch
 *
 * other registers must not be changed. especially
 * b0: rp: preserved. gcc ignores b0 in clobbered register.
 * r16: saved gp
 */
/* 5 bundles */

































































































































































































static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_fc (void *arg1) { register void *__arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"1"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(1)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 1)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.fc), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); };
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_thash (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"2"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(2)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 2)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.thash), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_cpuid (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"3"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(3)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 3)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_cpuid), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_pmd (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"4"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(4)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 4)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_pmd), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_ptcga (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"5"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(5)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 5)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.ptcga), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_rr (unsigned long arg1) { register unsigned long ia64_intri_res asm ("r8"); register unsigned long __arg1 asm ("r8") = arg1; asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"6"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(6)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 6)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_rr), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_set_rr (unsigned long arg1, unsigned long arg2) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long __arg2 asm ("r9") = arg2; register unsigned long ia64_clobber1 asm ("r8"); register unsigned long ia64_clobber2 asm ("r9"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"7"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(7)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 7)
#endif
 : "=r"(ia64_clobber1), "=r"(ia64_clobber2) : [op_addr] "i"(&pv_cpu_ops.set_rr), "0"(__arg1), "1"(__arg2) : "r2", "r3", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_ssm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"9"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(9)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 9)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.ssm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_rsm_i (void) { register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"10"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(10)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 10)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.rsm_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long paravirt_get_psr_i (void) { register unsigned long ia64_intri_res asm ("r8"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"11"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(11)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 11)
#endif
 : "=r"(ia64_intri_res) : [op_addr] "i"(&pv_cpu_ops.get_psr_i) : "r2", "r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); return ia64_intri_res; }
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void paravirt_intrin_local_irq_restore (unsigned long arg1) { register unsigned long __arg1 asm ("r8") = arg1; register unsigned long ia64_clobber asm ("r8"); asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"12"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(12)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n", 12)
#endif
 : "=r"(ia64_clobber) : [op_addr] "i"(&pv_cpu_ops.intrin_local_irq_restore), "0"(__arg1) : "r2","r3", "r9", "r10", "r11", "r14", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory"); }

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 void
paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,
			unsigned long val2, unsigned long val3,
			unsigned long val4)
{
	register unsigned long __val0 asm ("r8") = val0;
	register unsigned long __val1 asm ("r9") = val1;
	register unsigned long __val2 asm ("r10") = val2;
	register unsigned long __val3 asm ("r11") = val3;
	register unsigned long __val4 asm ("r14") = val4;

	register unsigned long ia64_clobber0 asm ("r8");
	register unsigned long ia64_clobber1 asm ("r9");
	register unsigned long ia64_clobber2 asm ("r10");
	register unsigned long ia64_clobber3 asm ("r11");
	register unsigned long ia64_clobber4 asm ("r14");

	asm volatile (
#if ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"\t998:\n" "\t" ";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n" "\n" "\t999:\n" "\t.pushsection .paravirt_bundles, \"a\"\n" "\t.popsection\n" "\t.xdata8 \".paravirt_bundles\", 998b, 999b, " 
#if ((!defined(__LINUX_COMPILER_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H) && !defined(__LINUX_STRINGIFY_H)) || (!definedEx(__LINUX_STRINGIFY_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__ASM_PARAVIRT_PATCH_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))) && !definedEx(_LINUX_KERNEL_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__LINUX_STRINGIFY_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_PARAVIRT_PRIVOP_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(ASM_SUPPORTED) && !defined(__LINUX_STRINGIFY_H) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(__ASM_PARAVIRT_PATCH_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !defined(__LINUX_STRINGIFY_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(ASM_SUPPORTED) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) && !defined(__ASM_PARAVIRT_PATCH_H) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
"8"
#endif
#if ((!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || defined(__LINUX_STRINGIFY_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(__LINUX_STRINGIFY_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || defined(__LINUX_STRINGIFY_H) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT) || definedEx(__LINUX_STRINGIFY_H)))
__stringify(
 8)
#endif
 "\n"
#endif
#if (((!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H))) || !definedEx(__KERNEL__) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || defined(__ASM_PARAVIRT_PATCH_H) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(__ASM_PARAVIRT_PATCH_H) || !definedEx(ASM_SUPPORTED) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__ASM_PARAVIRT_PATCH_H) || defined(_ASM_IA64_PARAVIRT_PRIVOP_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(ASM_SUPPORTED) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_PARAVIRT_PRIVOP_H) || definedEx(__ASM_PARAVIRT_PATCH_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))
paravirt_alt_bundle(";;\n" "{ .mlx\n" "nop 0\n" "movl r2 = %[op_addr]\n" ";;\n" "}\n" "1:\n" "{ .mii\n" "ld8 r2 = [r2]\n" "mov r17 = ip\n" "mov r16 = gp\n" ";;\n" "}\n" "{ .mii\n" "ld8 r3 = [r2], 8\n" "adds r17 =  1f - 1b, r17\n" ";;\n" "mov b7 = r3\n" "}\n" "{ .mib\n" "ld8 gp = [r2]\n" "mov b6 = r17\n" "br.cond.sptk.few b7\n" "}\n" "1:\n" "{ .mii\n" "mov gp = r16\n" "nop 0\n" "nop 0\n" ";;\n" "}\n",
					  8)
#endif

		      : "=r"(ia64_clobber0),
			"=r"(ia64_clobber1),
			"=r"(ia64_clobber2),
			"=r"(ia64_clobber3),
			"=r"(ia64_clobber4)
		      : [op_addr] "i"(&pv_cpu_ops.set_rr0_to_rr4),
			"0"(__val0), "1"(__val1), "2"(__val2),
			"3"(__val3), "4"(__val4)
		      : "r2", "r3", "r15", "r16", "r17", "b6", "b7", "p6", "p7", "p8", "p9", "p10", "p11", "p12", "p13", "p14", "p15", "ar.ccv", "memory");
}

/* unsigned long paravirt_getreg(int reg) */















/* void paravirt_setreg(int reg, unsigned long val) */

















#endif
#endif
#endif
#line 202 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/intrinsics.h" 2

#if !definedEx(__ASSEMBLY__)
#if (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__))
#if (definedEx(ASM_SUPPORTED) || (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)))

#endif
#if (!definedEx(ASM_SUPPORTED) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)))

#endif

#endif
#if (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__))


#endif
/************************************************/
/* Instructions paravirtualized for correctness */
/************************************************/
/* fc, thash, get_cpuid, get_pmd, get_eflags, set_eflags */
/* Note that "ttag" and "cover" are also privilege-sensitive; "ttag"
 * is not currently used (though it may be in a long-format VHPT system!)
 */






/************************************************/
/* Instructions paravirtualized for performance */
/************************************************/












#endif
#endif
#line 20 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h" 2

/**
 * set_bit - Atomically set a bit in memory
 * @nr: the bit to set
 * @addr: the address to start counting from
 *
 * This function is atomic and may not be reordered.  See __set_bit()
 * if you do not require the atomic guarantees.
 * Note that @nr may be almost arbitrarily large; this function is not
 * restricted to acting on a single-word quantity.
 *
 * The address must be (at least) "long" aligned.
 * Note that there are driver (e.g., eepro100) which use these operations to
 * operate on hw-defined data-structures, so we can't easily change these
 * operations to force a bigger alignment.
 *
 * bit 0 is the LSB of addr; bit 32 is the LSB of (addr+1).
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
set_bit (int nr, volatile void *addr)
{
	__u32 bit, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	bit = 1 << (nr & 31);
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 47, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old | bit;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
}

/**
 * __set_bit - Set a bit in memory
 * @nr: the bit to set
 * @addr: the address to start counting from
 *
 * Unlike set_bit(), this function is non-atomic and may be reordered.
 * If it's called on the same region of memory simultaneously, the effect
 * may be that only one operation succeeds.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
__set_bit (int nr, volatile void *addr)
{
	*((__u32 *) addr + (nr >> 5)) |= (1 << (nr & 31));
}

/*
 * clear_bit() has "acquire" semantics.
 */



/**
 * clear_bit - Clears a bit in memory
 * @nr: Bit to clear
 * @addr: Address to start counting from
 *
 * clear_bit() is atomic and may not be reordered.  However, it does
 * not contain a memory barrier, so if it is used for locking purposes,
 * you should call smp_mb__before_clear_bit() and/or smp_mb__after_clear_bit()
 * in order to ensure changes are visible on other processors.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
clear_bit (int nr, volatile void *addr)
{
	__u32 mask, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	mask = ~(1 << (nr & 31));
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 94, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old & mask;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
}

/**
 * clear_bit_unlock - Clears a bit in memory with release
 * @nr: Bit to clear
 * @addr: Address to start counting from
 *
 * clear_bit_unlock() is atomic and may not be reordered.  It does
 * contain a memory barrier suitable for unlock type operations.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
clear_bit_unlock (int nr, volatile void *addr)
{
	__u32 mask, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	mask = ~(1 << (nr & 31));
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 118, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old & mask;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_rel((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.rel %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_rel((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_rel((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.rel %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_rel((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_rel((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.rel %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_rel((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_rel((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.rel %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_rel((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_rel(m, old, new)
#endif
 != old);
}

/**
 * __clear_bit_unlock - Non-atomically clears a bit in memory with release
 * @nr: Bit to clear
 * @addr: Address to start counting from
 *
 * Similarly to clear_bit_unlock, the implementation uses a store
 * with release semantics. See also arch_spin_unlock().
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
__clear_bit_unlock(int nr, void *addr)
{
	__u32 * const m = (__u32 *) addr + (nr >> 5);
	__u32 const new = *m & ~(1 << (nr & 31));

	
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__st4_rel(m, new)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ asm volatile ("st4.rel.nta [%0] = %1\n\t" :: "r"(m), "r"(new)); })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_st4_rel_nta(m, new)
#endif
;
}

/**
 * __clear_bit - Clears a bit in memory (non-atomic version)
 * @nr: the bit to clear
 * @addr: the address to start counting from
 *
 * Unlike clear_bit(), this function is non-atomic and may be reordered.
 * If it's called on the same region of memory simultaneously, the effect
 * may be that only one operation succeeds.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
__clear_bit (int nr, volatile void *addr)
{
	*((__u32 *) addr + (nr >> 5)) &= ~(1 << (nr & 31));
}

/**
 * change_bit - Toggle a bit in memory
 * @nr: Bit to toggle
 * @addr: Address to start counting from
 *
 * change_bit() is atomic and may not be reordered.
 * Note that @nr may be almost arbitrarily large; this function is not
 * restricted to acting on a single-word quantity.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
change_bit (int nr, volatile void *addr)
{
	__u32 bit, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	bit = (1 << (nr & 31));
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 175, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old ^ bit;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
}

/**
 * __change_bit - Toggle a bit in memory
 * @nr: the bit to toggle
 * @addr: the address to start counting from
 *
 * Unlike change_bit(), this function is non-atomic and may be reordered.
 * If it's called on the same region of memory simultaneously, the effect
 * may be that only one operation succeeds.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 void
__change_bit (int nr, volatile void *addr)
{
	*((__u32 *) addr + (nr >> 5)) ^= (1 << (nr & 31));
}

/**
 * test_and_set_bit - Set a bit and return its old value
 * @nr: Bit to set
 * @addr: Address to count from
 *
 * This operation is atomic and cannot be reordered.  
 * It also implies the acquisition side of the memory barrier.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
test_and_set_bit (int nr, volatile void *addr)
{
	__u32 bit, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	bit = 1 << (nr & 31);
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 214, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old | bit;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
	return (old & bit) != 0;
}

/**
 * test_and_set_bit_lock - Set a bit and return its old value for lock
 * @nr: Bit to set
 * @addr: Address to count from
 *
 * This is the same as test_and_set_bit on ia64
 */


/**
 * __test_and_set_bit - Set a bit and return its old value
 * @nr: Bit to set
 * @addr: Address to count from
 *
 * This operation is non-atomic and can be reordered.  
 * If two examples of this operation race, one can appear to succeed
 * but actually fail.  You must protect multiple accesses with a lock.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
__test_and_set_bit (int nr, volatile void *addr)
{
	__u32 *p = (__u32 *) addr + (nr >> 5);
	__u32 m = 1 << (nr & 31);
	int oldbitset = (*p & m) != 0;

	*p |= m;
	return oldbitset;
}

/**
 * test_and_clear_bit - Clear a bit and return its old value
 * @nr: Bit to clear
 * @addr: Address to count from
 *
 * This operation is atomic and cannot be reordered.  
 * It also implies the acquisition side of the memory barrier.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
test_and_clear_bit (int nr, volatile void *addr)
{
	__u32 mask, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	mask = ~(1 << (nr & 31));
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 268, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old & mask;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
	return (old & ~mask) != 0;
}

/**
 * __test_and_clear_bit - Clear a bit and return its old value
 * @nr: Bit to clear
 * @addr: Address to count from
 *
 * This operation is non-atomic and can be reordered.  
 * If two examples of this operation race, one can appear to succeed
 * but actually fail.  You must protect multiple accesses with a lock.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
__test_and_clear_bit(int nr, volatile void * addr)
{
	__u32 *p = (__u32 *) addr + (nr >> 5);
	__u32 m = 1 << (nr & 31);
	int oldbitset = (*p & m) != 0;

	*p &= ~m;
	return oldbitset;
}

/**
 * test_and_change_bit - Change a bit and return its old value
 * @nr: Bit to change
 * @addr: Address to count from
 *
 * This operation is atomic and cannot be reordered.  
 * It also implies the acquisition side of the memory barrier.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
test_and_change_bit (int nr, volatile void *addr)
{
	__u32 bit, old, new;
	volatile __u32 *m;
	
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
int _cmpxchg_bugcheck_count = 128;
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK_DECL
#endif


	m = (volatile __u32 *) addr + (nr >> 5);
	bit = (1 << (nr & 31));
	do {
		
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))
do { 
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((_cmpxchg_bugcheck_count-- <= 0))) ? !!((_cmpxchg_bugcheck_count-- <= 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 313, }; ______r = !!((_cmpxchg_bugcheck_count-- <= 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (_cmpxchg_bugcheck_count-- <= 0)
#endif
 { void *ip; extern int printk(const char *fmt, ...); ip = (void *) 
#if (((definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || (definedEx(CONFIG_PARAVIRT) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PARAVIRT) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
paravirt_getreg
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)))))))))) && (((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_PARAVIRT) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_PARAVIRT)) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && (!definedEx(CONFIG_PARAVIRT) || !definedEx(__KERNEL__)) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__))))
ia64_native_getreg
#endif
(
#if ((!definedEx(_ASM_IA64_IA64REGS_H) && definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || (!definedEx(_ASM_IA64_IA64REGS_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(_ASM_IA64_IA64REGS_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_IA64REGS_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))
1016
#endif
#if ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_IA64REGS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__KERNEL__) || defined(_ASM_IA64_IA64REGS_H) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_IA64REGS_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
_IA64_REG_IP
#endif
); printk("CMPXCHG_BUGCHECK: stuck at %p on word %p\n", ip, (m)); break; } } while (0)
#endif
#if (((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))) && (((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)))) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)))) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__))))

#endif
#if ((!definedEx(__KERNEL__) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))))))) && ((!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || ((!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(CONFIG_IA64_DEBUG_CMPXCHG) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))))))
CMPXCHG_BUGCHECK(m)
#endif
;
		old = *m;
		new = old ^ bit;
	} while (
#if ((!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))
({ __u64 _o_, _r_; switch (sizeof(*(m))) { case 1: _o_ = (__u8 ) (long) ((old)); break; case 2: _o_ = (__u16) (long) ((old)); break; case 4: _o_ = (__u32) (long) ((old)); break; case 8: _o_ = (__u64) (long) ((old)); break; default: break; } switch (sizeof(*(m))) { case 1: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange8_acq((__u8 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg1.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u8 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg1_acq((__u8 *) (m), (new), _o_)
#endif
; break; case 2: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange16_acq((__u16 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg2.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u16 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg2_acq((__u16 *) (m), (new), _o_)
#endif
; break; case 4: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange_acq((__u32 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg4.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u32 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg4_acq((__u32 *) (m), (new), _o_)
#endif
; break; case 8: _r_ = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_InterlockedCompareExchange64_acq((__u64 *) (m), (new), _o_)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ __u64 ia64_intri_res; asm volatile ("mov ar.ccv=%0;;" :: "rO"(_o_)); asm volatile ("cmpxchg8.acq %0=[%1],%2,ar.ccv": "=r"(ia64_intri_res) : "r"((__u64 *)(m)), "r"((new)) : "memory"); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_cmpxchg8_acq((__u64 *) (m), (new), _o_)
#endif
; break; default: _r_ = ia64_cmpxchg_called_with_bad_pointer(); break; } (__typeof__((old))) _r_; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
cmpxchg_acq(m, old, new)
#endif
 != old);
	return (old & bit) != 0;
}

/**
 * __test_and_change_bit - Change a bit and return its old value
 * @nr: Bit to change
 * @addr: Address to count from
 *
 * This operation is non-atomic and can be reordered.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
__test_and_change_bit (int nr, void *addr)
{
	__u32 old, bit = (1 << (nr & 31));
	__u32 *m = (__u32 *) addr + (nr >> 5);

	old = *m;
	*m = old ^ bit;
	return (old & bit) != 0;
}

static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 int
test_bit (int nr, const volatile void *addr)
{
	return 1 & (((const volatile __u32 *) addr)[nr >> 5] >> (nr & 31));
}

/**
 * ffz - find the first zero bit in a long word
 * @x: The long word to find the bit in
 *
 * Returns the bit-number (0..63) of the first (least significant) zero bit.
 * Undefined if no zero exists, so code should check against ~0UL first...
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long
ffz (unsigned long x)
{
	unsigned long result;

	result = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_m64_popcnt(x & (~x - 1))
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
__builtin_popcountl(x &(~x - 1))
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_popcnt(x & (~x - 1))
#endif
;
	return result;
}

/**
 * __ffs - find first bit in word.
 * @x: The word to search
 *
 * Undefined if no bit exists, so code should check against 0 first.
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
__inline__ __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
__inline__
#endif
 unsigned long
__ffs (unsigned long x)
{
	unsigned long result;

	result = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_m64_popcnt((x-1) & ~x)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
__builtin_popcountl((x-1) & ~x)
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_popcnt((x-1) & ~x)
#endif
;
	return result;
}


/*
 * Return bit number of last (most-significant) bit set.  Undefined
 * for x==0.  Bits are numbered from 0..63 (e.g., ia64_fls(9) == 3).
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long
ia64_fls (unsigned long x)
{
	long double d = x;
	long exp;

	exp = 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
__getf_exp(d)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
({ long ia64_intri_res; asm ("getf.exp %0=%1" : "=r"(ia64_intri_res) : "f"(d)); ia64_intri_res; })
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_getf_exp(d)
#endif
;
	return exp - 0xffff;
}

/*
 * Find the last (most significant) bit set.  Returns 0 for x==0 and
 * bits are numbered from 1..32 (e.g., fls(9) == 4).
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 int
fls (int t)
{
	unsigned long x = t & 0xffffffffu;

	
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((!x))) ? !!((!x)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/bitops.h", .line = 400, }; ______r = !!((!x)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (!x)
#endif

		return 0;
	x |= x >> 1;
	x |= x >> 2;
	x |= x >> 4;
	x |= x >> 8;
	x |= x >> 16;
	return 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_m64_popcnt(x)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
__builtin_popcountl(x)
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_popcnt(x)
#endif
;
}

/*
 * Find the last (most significant) bit set.  Undefined for x==0.
 * Bits are numbered from 0..63 (e.g., __fls(9) == 3).
 */
static 
#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 unsigned long
__fls (unsigned long x)
{
	x |= x >> 1;
	x |= x >> 2;
	x |= x >> 4;
	x |= x >> 8;
	x |= x >> 16;
	x |= x >> 32;
	return 
#if ((!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !defined(_ASM_IA64_INTEL_INTRIN_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (!definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__INTEL_COMPILER)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && !defined(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_INTRINSICS_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_INTEL_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__ECC) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER))))
_m64_popcnt(x)
#endif
#if (!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__) && ((!definedEx(__INTEL_COMPILER) && !definedEx(__ASSEMBLY__) && !defined(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_BITOPS_H) && !definedEx(_ASM_IA64_GCC_INTRIN_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && definedEx(__KERNEL__)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))))
__builtin_popcountl(x)
#endif
#if ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(_ASM_IA64_INTRINSICS_H) || defined(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__INTEL_COMPILER) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || definedEx(_ASM_IA64_INTEL_INTRIN_H)) && (!definedEx(__KERNEL__) || definedEx(_LINUX_BITOPS_H) || definedEx(_ASM_IA64_BITOPS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_GCC_INTRIN_H) || definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || defined(_ASM_IA64_INTEL_INTRIN_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__INTEL_COMPILER) || !definedEx(__KERNEL__) || !definedEx(__ECC) || defined(_ASM_IA64_INTEL_INTRIN_H) || defined(__LINUX_COMPILER_H) || defined(_ASM_IA64_INTRINSICS_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
ia64_popcnt(x)
#endif
 - 1;
}

#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitops/fls64.h" 1
#if !definedEx(_ASM_GENERIC_BITOPS_FLS64_H_)


#line 1 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/arch/ia64/include/asm/types.h" 1


















 





 









	
	








#line 6 "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitops/fls64.h" 2

/**
 * fls64 - find last set bit in a 64-bit word
 * @x: the word to search
 *
 * This is defined in a similar way as the libc and compiler builtin
 * ffsll, but returns the position of the most significant set bit.
 *
 * fls64(value) returns 0 if value is 0 or the position of the last
 * set bit if value is nonzero. The last (most significant) bit is
 * at position 64.
 */
#if ((((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT)) && (((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG)) && (((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__ASM_IA64_BITSPERLONG_H) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_64BIT) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)))) || (!defined(__ASM_IA64_BITSPERLONG_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && !defined(_LINUX_TYPES_H)))) || (!defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H))) && ((!defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H)) || ((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT)) && ((!defined(__ASM_IA64_BITSPERLONG_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG)) && ((definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_64BIT) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASM_IA64_BITSPERLONG_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || (!definedEx(__ASSEMBLY__) && !definedEx(__ASM_IA64_BITSPERLONG_H) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_64BIT)))))))))))
static 
#if ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || defined(__always_inline)) && (((defined(__always_inline) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || defined(__always_inline) || definedEx(_LINUX_KERNEL_H)) && (((definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__)) || definedEx(__always_inline)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))) || (definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__))))

#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 __attribute__((always_inline))
#endif
#if (((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline)) || ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || (!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)))))))) && (((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && (((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))) || (definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline))))
inline
#endif
#if ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || defined(__always_inline)) && ((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__)) || ((defined(__always_inline) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || defined(__always_inline) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || definedEx(__always_inline)))))) && ((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline)) || ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || (!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)))))))))
__always_inline
#endif
 int fls64(__u64 x)
{
	__u32 h = x >> 32;
	
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((h))) ? !!((h)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitops/fls64.h", .line = 21, }; ______r = !!((h)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (h)
#endif

		return fls(h) + 32;
	return fls(x);
}
#endif
#if ((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(CONFIG_64BIT) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG)) && (((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__ASM_IA64_BITSPERLONG_H) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || definedEx(__ASM_IA64_BITSPERLONG_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && definedEx(CONFIG_64BIT) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)))) || (!defined(__ASM_IA64_BITSPERLONG_H) && definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)))) || (definedEx(CONFIG_64BIT) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !defined(_ASM_GENERIC_INT_LL64_H))) && (((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(CONFIG_64BIT) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !defined(_ASM_GENERIC_INT_LL64_H)) || ((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(CONFIG_64BIT) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG)) && ((!defined(__ASM_IA64_BITSPERLONG_H) && definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && definedEx(CONFIG_64BIT) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || definedEx(__ASM_IA64_BITSPERLONG_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H))))))))) || ((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H)) && (((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(CONFIG_64BIT) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG)) && (((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && ((!definedEx(__ASSEMBLY__) && !definedEx(__ASM_IA64_BITSPERLONG_H) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || definedEx(__ASM_IA64_BITSPERLONG_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)))) || (definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && definedEx(CONFIG_64BIT) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)))) || (!defined(__ASM_IA64_BITSPERLONG_H) && definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)))) || (definedEx(CONFIG_64BIT) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !defined(_ASM_GENERIC_INT_LL64_H))))))
static 
#if ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || defined(__always_inline)) && (((defined(__always_inline) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || defined(__always_inline) || definedEx(_LINUX_KERNEL_H)) && (((definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(__KERNEL__)) || definedEx(__always_inline)) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))) || (definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__))))

#if ((!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && !definedEx(_LINUX_KERNEL_H) && (!definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || !definedEx(CONFIG_OPTIMIZE_INLINING)) && definedEx(__KERNEL__)))
inline __attribute__((always_inline))
#endif
#if ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || definedEx(__ASSEMBLY__)) && (defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(__KERNEL__) || (definedEx(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && definedEx(CONFIG_OPTIMIZE_INLINING)) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
inline
#endif
 __attribute__((always_inline))
#endif
#if (((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline)) || ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || (!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)))))))) && (((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && (((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)))) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)))) || (definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline))))
inline
#endif
#if ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || defined(__always_inline)) && ((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__)) || ((defined(__always_inline) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || defined(__always_inline) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (!definedEx(__ASSEMBLY__) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || definedEx(__always_inline)))))) && ((definedEx(__KERNEL__) && !definedEx(_LINUX_KERNEL_H) && !defined(__LINUX_COMPILER_H) && !defined(__always_inline)) || ((definedEx(_LINUX_KERNEL_H) || !definedEx(__KERNEL__) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && ((definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !defined(__always_inline) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || ((defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(__always_inline) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || ((!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (definedEx(_LINUX_INIT_H) || (!definedEx(__always_inline) && (definedEx(__LINUX_COMPILER_H) || definedEx(_LINUX_INIT_H) || definedEx(__ASSEMBLY__) || !definedEx(__KERNEL__)) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__KERNEL__)) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)))))))))
__always_inline
#endif
 int fls64(__u64 x)
{
	
#if ((!definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && !definedEx(_LINUX_INIT_H) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && definedEx(__KERNEL__)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H)) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__LINUX_COMPILER_H) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__)) || (!defined(__LINUX_COMPILER_H) && !definedEx(__ASSEMBLY__) && definedEx(CONFIG_PROFILE_ALL_BRANCHES) && !definedEx(__CHECKER__) && !definedEx(DISABLE_BRANCH_PROFILING) && definedEx(CONFIG_TRACE_BRANCH_PROFILING) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__)))
if (__builtin_constant_p(((x == 0))) ? !!((x == 0)) : ({ int ______r; static struct ftrace_branch_data __attribute__((__aligned__(4))) __attribute__((section("_ftrace_branch"))) ______f = { .func = __func__, .file = "/Users/Flavio/Desktop/Project/Linux/linux-2.6.33.3/include/asm-generic/bitops/fls64.h", .line = 28, }; ______r = !!((x == 0)); ______f.miss_hit[______r]++; ______r; }))
#endif
#if ((!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(_LINUX_LINKAGE_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__)) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || defined(_LINUX_STDDEF_H) || !definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || definedEx(DISABLE_BRANCH_PROFILING) || !definedEx(_LINUX_INIT_H) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && (!definedEx(CONFIG_PROFILE_ALL_BRANCHES) || !definedEx(__KERNEL__) || definedEx(DISABLE_BRANCH_PROFILING) || definedEx(__CHECKER__) || !definedEx(CONFIG_TRACE_BRANCH_PROFILING) || defined(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H)))
if (x == 0)
#endif

		return 0;
	return __fls(x) + 1;
}
#endif
#if ((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H)) && ((definedEx(CONFIG_64BIT) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !defined(_ASM_GENERIC_INT_LL64_H)) || ((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(CONFIG_64BIT) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG)) && ((!defined(__ASM_IA64_BITSPERLONG_H) && definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && definedEx(CONFIG_64BIT) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(CONFIG_64BIT) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(CONFIG_64BIT) || definedEx(__ASM_IA64_BITSPERLONG_H) || (definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && definedEx(CONFIG_64BIT) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && definedEx(__INTEL_COMPILER)) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)))))))) && ((!defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_LINUX_BITOPS_H) && !defined(__ASM_IA64_BITSPERLONG_H) && definedEx(__KERNEL__) && !defined(_ASM_IA64_TYPES_H) && !definedEx(CONFIG_64BIT) && !defined(_ASM_GENERIC_INT_LL64_H)) || ((defined(__ASM_GENERIC_BITS_PER_LONG) || !definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || definedEx(_LINUX_BITOPS_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(_ASM_IA64_TYPES_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT)) && ((!defined(__ASM_IA64_BITSPERLONG_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_TYPES_H) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && !defined(_LINUX_TYPES_H)) || ((!definedEx(__KERNEL__) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || defined(_ASM_IA64_TYPES_H) || defined(_ASM_GENERIC_INT_LL64_H) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG)) && ((definedEx(_LINUX_INIT_H) && !defined(_ASM_GENERIC_INT_LL64_H) && !definedEx(__ASSEMBLY__) && !defined(_LINUX_TYPES_H) && !definedEx(__LINUX_COMPILER_H) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__KERNEL__) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || definedEx(_LINUX_LINKAGE_H) || definedEx(_LINUX_KERNEL_H)) && !definedEx(_LINUX_KERNEL_H) && !defined(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && !defined(_LINUX_STDDEF_H) && definedEx(__KERNEL__) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER) && !defined(_ASM_IA64_TYPES_H)) || ((!definedEx(__INTEL_COMPILER) || defined(_ASM_IA64_TYPES_H) || defined(_LINUX_STDDEF_H) || defined(_ASM_IA64_INTRINSICS_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || !definedEx(_LINUX_INIT_H) || defined(_ASM_GENERIC_INT_LL64_H) || defined(__ASM_IA64_BITSPERLONG_H) || defined(_LINUX_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || !definedEx(CONFIG_64BIT) || defined(__ASM_GENERIC_BITS_PER_LONG) || (definedEx(_LINUX_INIT_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_KERNEL_H) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H))) && ((definedEx(_LINUX_INIT_H) && !definedEx(__ASSEMBLY__) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__) || definedEx(_ASM_IA64_INTRINSICS_H)) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_KERNEL_H) && !definedEx(_ASM_IA64_TYPES_H) && !defined(__ASM_IA64_BITSPERLONG_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && !defined(__ASM_GENERIC_BITS_PER_LONG) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASSEMBLY__)) && definedEx(__KERNEL__) && !definedEx(_LINUX_LINKAGE_H) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)) || ((!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_TYPES_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || defined(__ASM_IA64_BITSPERLONG_H) || !definedEx(_LINUX_INIT_H) || defined(__ASM_GENERIC_BITS_PER_LONG) || definedEx(_LINUX_LINKAGE_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER)) || definedEx(__ASSEMBLY__) || definedEx(_LINUX_KERNEL_H) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_64BIT) || (!definedEx(__ASSEMBLY__) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && definedEx(__INTEL_COMPILER))) && (!definedEx(__INTEL_COMPILER) || definedEx(_LINUX_INIT_H) || definedEx(_LINUX_TYPES_H) || !definedEx(__KERNEL__) || !definedEx(__ECC) || definedEx(__LINUX_COMPILER_H) || definedEx(__ASM_IA64_BITSPERLONG_H) || definedEx(_ASM_IA64_TYPES_H) || definedEx(_ASM_GENERIC_INT_LL64_H) || definedEx(__ASM_GENERIC_BITS_PER_LONG) || definedEx(__ASSEMBLY__) || (!definedEx(__ASSEMBLY__) && !definedEx(__ASM_IA64_BITSPERLONG_H) && !definedEx(_ASM_GENERIC_INT_LL64_H) && !definedEx(__LINUX_COMPILER_H) && !definedEx(_LINUX_INIT_H) && !definedEx(_ASM_IA64_INTRINSICS_H) && !definedEx(_ASM_IA64_TYPES_H) && !definedEx(__ASM_GENERIC_BITS_PER_LONG) && !definedEx(_LINUX_TYPES_H) && definedEx(__ECC) && definedEx(__KERNEL__) && !definedEx(CONFIG_64BIT) && definedEx(__INTEL_COMPILER)) || definedEx(_ASM_IA64_INTRINSICS_H) || !definedEx(CONFIG_64BIT)))))))))))
